<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="GiftCard" time="73.978" tests="1" failures="0" errors="0">
   <testsuite name="GiftCard" tests="1" failures="0" errors="0" time="73.978" skipped="0" timestamp="24-09-2024T13:24:54" hostname="manilacel - 192.168.100.193" id="Test Suites/PMT_Libraries/GiftCard">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform"/>
         <property name="logFolder" value="/Users/manilacel/Library/CloudStorage/OneDrive-RoyalCaribbeanGroup/PMT/Git/RestructuredScript/TestingFolder/Reports/20240924_132440/PMT_Libraries/GiftCard/20240924_132443"/>
         <property name="logFiles" value="/Users/manilacel/Library/CloudStorage/OneDrive-RoyalCaribbeanGroup/PMT/Git/RestructuredScript/TestingFolder/Reports/20240924_132440/PMT_Libraries/GiftCard/20240924_132443/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="manilacel - 192.168.100.193"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="9.5.0.217"/>
         <property name="browser" value="Chrome 128.0.0.0"/>
         <property name="hostAddress" value="192.168.100.193"/>
         <property name="sessionId" value="bec3a57d011108b030d3d96fd7cedbd2"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Mac OS X"/>
      </properties>
      <testcase name="Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance" time="73.746" classname="Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance" status="PASSED">
         <system-out><![CDATA[24-09-2024T13:24:54 - [TEST_CASE][PASSED] - Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance: Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance

24-09-2024T13:24:56 - [TEST_STEP][PASSED] - try: null

24-09-2024T13:24:56 - [TEST_STEP][PASSED] - utils.openBrowserAndNavigateToPMT(): Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

24-09-2024T13:24:56 - [MESSAGE][INFO] - Starting 'Chrome' driver

24-09-2024T13:24:56 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

24-09-2024T13:25:03 - [MESSAGE][PASSED] - Browser is opened with url: ''

24-09-2024T13:25:04 - [MESSAGE][PASSED] - Current window maximized

24-09-2024T13:25:09 - [MESSAGE][PASSED] - Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

24-09-2024T13:25:09 - [TEST_STEP][PASSED] - EXCEL_PATH = "./Data Files/TestData.xlsx": null

24-09-2024T13:25:09 - [TEST_STEP][PASSED] - TAB = "GiftCards": null

24-09-2024T13:25:09 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

24-09-2024T13:25:09 - [TEST_STEP][PASSED] - utils.goToGiftCards(): null

24-09-2024T13:25:11 - [TEST_STEP][PASSED] - utils.selectEnvironment(ENV): null

24-09-2024T13:25:12 - [TEST_STEP][PASSED] - sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']")): null

24-09-2024T13:25:12 - [TEST_STEP][PASSED] - testdata = getdata.fromExcel(EXCEL_PATH, "GiftCards"): null

24-09-2024T13:25:14 - [TEST_STEP][PASSED] - for ([i = 0, i < testdata.size(), (i++)]): null

24-09-2024T13:25:14 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

24-09-2024T13:25:19 - [MESSAGE][PASSED] - Delayed 5 second(s)

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - println(prettyJson): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

24-09-2024T13:25:19 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

24-09-2024T13:25:20 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

24-09-2024T13:25:23 - [MESSAGE][PASSED] - Delayed 3 second(s)

24-09-2024T13:25:23 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - println(response): null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - println(validation1): null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - println(validation2): null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

24-09-2024T13:25:26 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

24-09-2024T13:25:31 - [MESSAGE][PASSED] - Delayed 5 second(s)

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - println(prettyJson): null

24-09-2024T13:25:31 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

24-09-2024T13:25:32 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

24-09-2024T13:25:32 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

24-09-2024T13:25:35 - [MESSAGE][PASSED] - Delayed 3 second(s)

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - println(response): null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - println(validation1): null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - println(validation2): null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

24-09-2024T13:25:35 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

24-09-2024T13:25:40 - [MESSAGE][PASSED] - Delayed 5 second(s)

24-09-2024T13:25:40 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - println(prettyJson): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

24-09-2024T13:25:41 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

24-09-2024T13:25:42 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

24-09-2024T13:25:45 - [MESSAGE][PASSED] - Delayed 3 second(s)

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - println(response): null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - println(validation1): null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - println(validation2): null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

24-09-2024T13:25:45 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

24-09-2024T13:25:50 - [MESSAGE][PASSED] - Delayed 5 second(s)

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - println(prettyJson): null

24-09-2024T13:25:50 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

24-09-2024T13:25:51 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

24-09-2024T13:25:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

24-09-2024T13:25:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - println(response): null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - println(validation1): null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - println(validation2): null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

24-09-2024T13:25:55 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

24-09-2024T13:26:00 - [MESSAGE][PASSED] - Delayed 5 second(s)

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - println(prettyJson): null

24-09-2024T13:26:00 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

24-09-2024T13:26:01 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

24-09-2024T13:26:02 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

24-09-2024T13:26:05 - [MESSAGE][PASSED] - Delayed 3 second(s)

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - println(response): null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - println(validation1): null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - println(validation2): null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - Finally: Browser is closed

24-09-2024T13:26:05 - [TEST_STEP][PASSED] - utils.closeBrowser(): Browser is closed

24-09-2024T13:26:07 - [MESSAGE][PASSED] - Delayed 2 second(s)

24-09-2024T13:26:08 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[24-09-2024T13:24:54 - [TEST_SUITE][PASSED] - GiftCard: Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
