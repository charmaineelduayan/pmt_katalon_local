1
00:00:00,277 --> 00:00:00,288
1. try

2
00:00:00,293 --> 00:00:07,100
1. utils.openBrowserAndNavigateToPMT()

3
00:00:07,136 --> 00:00:07,161
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:07,161 --> 00:00:07,167
9. TAB = "cardTokenization_Generate"

5
00:00:07,168 --> 00:00:07,185
13. driver = getWebDriver()

6
00:00:07,185 --> 00:00:10,446
17. utils.goToCardTokenization()

7
00:00:10,447 --> 00:00:11,221
21. clickGenerateToken = xpath("//a[normalize-space()='Generate Token']")).click()

8
00:00:11,222 --> 00:00:12,501
25. utils.selectEnvironment(ENV)

9
00:00:12,511 --> 00:00:12,766
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:12,776 --> 00:00:13,327
33. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

11
00:00:13,328 --> 00:00:13,331
37. for ([i = 0, i < testdata.size(), (i++)])

12
00:00:13,331 --> 00:00:13,360
1. sendRequestTextBox.clear()

13
00:00:13,361 --> 00:00:13,364
5. encryptedCard = testdata["encryptedCard"][i]

14
00:00:13,364 --> 00:00:13,369
9. CNumber = encryptedCard.replaceAll("\.0$", "")

15
00:00:13,370 --> 00:00:13,373
13. expirationMonth = testdata["expirationMonth"][i]

16
00:00:13,373 --> 00:00:13,375
17. xMonth = expirationMonth.replaceAll("\.0$", "")

17
00:00:13,375 --> 00:00:13,378
21. expirationYear = testdata["expirationYear"][i]

18
00:00:13,378 --> 00:00:13,381
25. xYear = expirationYear.replaceAll("\.0$", "")

19
00:00:13,381 --> 00:00:13,410
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

20
00:00:13,425 --> 00:00:13,439
33. restRequest = JsonSlurper().parseText(request)

21
00:00:13,449 --> 00:00:13,484
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

22
00:00:13,489 --> 00:00:13,536
41. println(prettyJson)

23
00:00:13,553 --> 00:00:13,714
45. sendRequestTextBox.sendKeys(prettyJson)

24
00:00:13,715 --> 00:00:14,439
49. utils.clickSendButton()

25
00:00:14,446 --> 00:00:17,489
53. delay(3)

26
00:00:17,490 --> 00:00:18,448
57. response = utils.getResponse()

27
00:00:18,448 --> 00:00:18,450
61. println(response)

28
00:00:18,450 --> 00:00:18,452
65. validation1 = testdata["ContainsValidation"][i]

29
00:00:18,453 --> 00:00:18,455
69. println(validation1)

30
00:00:18,455 --> 00:00:18,457
73. validation2 = testdata["NotContainsValidation"][i]

31
00:00:18,457 --> 00:00:18,459
77. println(validation2)

32
00:00:18,459 --> 00:00:18,462
81. println(testdata["TCNumber"][i])

33
00:00:18,462 --> 00:00:18,471
85. assert response.contains(validation1)

34
00:00:18,471 --> 00:00:18,477
89. assert response.contains(validation2) == false

35
00:00:18,478 --> 00:00:18,496
1. sendRequestTextBox.clear()

36
00:00:18,496 --> 00:00:18,498
5. encryptedCard = testdata["encryptedCard"][i]

37
00:00:18,498 --> 00:00:18,499
9. CNumber = encryptedCard.replaceAll("\.0$", "")

38
00:00:18,499 --> 00:00:18,500
13. expirationMonth = testdata["expirationMonth"][i]

39
00:00:18,500 --> 00:00:18,501
17. xMonth = expirationMonth.replaceAll("\.0$", "")

40
00:00:18,501 --> 00:00:18,502
21. expirationYear = testdata["expirationYear"][i]

41
00:00:18,503 --> 00:00:18,504
25. xYear = expirationYear.replaceAll("\.0$", "")

42
00:00:18,504 --> 00:00:18,505
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

43
00:00:18,506 --> 00:00:18,507
33. restRequest = JsonSlurper().parseText(request)

44
00:00:18,507 --> 00:00:18,508
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

45
00:00:18,508 --> 00:00:18,509
41. println(prettyJson)

46
00:00:18,510 --> 00:00:18,595
45. sendRequestTextBox.sendKeys(prettyJson)

47
00:00:18,596 --> 00:00:18,886
49. utils.clickSendButton()

48
00:00:18,887 --> 00:00:21,896
53. delay(3)

49
00:00:21,896 --> 00:00:22,134
57. response = utils.getResponse()

50
00:00:22,135 --> 00:00:22,136
61. println(response)

51
00:00:22,137 --> 00:00:22,138
65. validation1 = testdata["ContainsValidation"][i]

52
00:00:22,138 --> 00:00:22,139
69. println(validation1)

53
00:00:22,139 --> 00:00:22,140
73. validation2 = testdata["NotContainsValidation"][i]

54
00:00:22,140 --> 00:00:22,141
77. println(validation2)

55
00:00:22,141 --> 00:00:22,142
81. println(testdata["TCNumber"][i])

56
00:00:22,142 --> 00:00:22,143
85. assert response.contains(validation1)

57
00:00:22,143 --> 00:00:22,144
89. assert response.contains(validation2) == false

58
00:00:22,144 --> 00:00:22,164
1. sendRequestTextBox.clear()

59
00:00:22,178 --> 00:00:22,179
5. encryptedCard = testdata["encryptedCard"][i]

60
00:00:22,179 --> 00:00:22,180
9. CNumber = encryptedCard.replaceAll("\.0$", "")

61
00:00:22,180 --> 00:00:22,181
13. expirationMonth = testdata["expirationMonth"][i]

62
00:00:22,182 --> 00:00:22,182
17. xMonth = expirationMonth.replaceAll("\.0$", "")

63
00:00:22,183 --> 00:00:22,183
21. expirationYear = testdata["expirationYear"][i]

64
00:00:22,184 --> 00:00:22,184
25. xYear = expirationYear.replaceAll("\.0$", "")

65
00:00:22,185 --> 00:00:22,185
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

66
00:00:22,186 --> 00:00:22,187
33. restRequest = JsonSlurper().parseText(request)

67
00:00:22,187 --> 00:00:22,189
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

68
00:00:22,190 --> 00:00:22,190
41. println(prettyJson)

69
00:00:22,191 --> 00:00:22,285
45. sendRequestTextBox.sendKeys(prettyJson)

70
00:00:22,285 --> 00:00:22,564
49. utils.clickSendButton()

71
00:00:22,565 --> 00:00:25,577
53. delay(3)

72
00:00:25,577 --> 00:00:25,814
57. response = utils.getResponse()

73
00:00:25,814 --> 00:00:25,815
61. println(response)

74
00:00:25,816 --> 00:00:25,816
65. validation1 = testdata["ContainsValidation"][i]

75
00:00:25,817 --> 00:00:25,817
69. println(validation1)

76
00:00:25,818 --> 00:00:25,818
73. validation2 = testdata["NotContainsValidation"][i]

77
00:00:25,818 --> 00:00:25,819
77. println(validation2)

78
00:00:25,819 --> 00:00:25,820
81. println(testdata["TCNumber"][i])

79
00:00:25,820 --> 00:00:25,821
85. assert response.contains(validation1)

80
00:00:25,821 --> 00:00:25,822
89. assert response.contains(validation2) == false

81
00:00:25,822 --> 00:00:25,841
1. sendRequestTextBox.clear()

82
00:00:25,841 --> 00:00:25,842
5. encryptedCard = testdata["encryptedCard"][i]

83
00:00:25,842 --> 00:00:25,843
9. CNumber = encryptedCard.replaceAll("\.0$", "")

84
00:00:25,843 --> 00:00:25,844
13. expirationMonth = testdata["expirationMonth"][i]

85
00:00:25,844 --> 00:00:25,845
17. xMonth = expirationMonth.replaceAll("\.0$", "")

86
00:00:25,845 --> 00:00:25,846
21. expirationYear = testdata["expirationYear"][i]

87
00:00:25,847 --> 00:00:25,847
25. xYear = expirationYear.replaceAll("\.0$", "")

88
00:00:25,848 --> 00:00:25,848
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

89
00:00:25,849 --> 00:00:25,849
33. restRequest = JsonSlurper().parseText(request)

90
00:00:25,850 --> 00:00:25,851
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

91
00:00:25,851 --> 00:00:25,852
41. println(prettyJson)

92
00:00:25,852 --> 00:00:25,947
45. sendRequestTextBox.sendKeys(prettyJson)

93
00:00:25,947 --> 00:00:26,225
49. utils.clickSendButton()

94
00:00:26,225 --> 00:00:29,236
53. delay(3)

95
00:00:29,236 --> 00:00:29,478
57. response = utils.getResponse()

96
00:00:29,478 --> 00:00:29,479
61. println(response)

97
00:00:29,480 --> 00:00:29,480
65. validation1 = testdata["ContainsValidation"][i]

98
00:00:29,481 --> 00:00:29,481
69. println(validation1)

99
00:00:29,481 --> 00:00:29,482
73. validation2 = testdata["NotContainsValidation"][i]

100
00:00:29,482 --> 00:00:29,483
77. println(validation2)

101
00:00:29,483 --> 00:00:29,483
81. println(testdata["TCNumber"][i])

102
00:00:29,484 --> 00:00:29,484
85. assert response.contains(validation1)

103
00:00:29,484 --> 00:00:29,487
89. assert response.contains(validation2) == false

104
00:00:29,487 --> 00:00:31,637
1. utils.closeBrowser()

