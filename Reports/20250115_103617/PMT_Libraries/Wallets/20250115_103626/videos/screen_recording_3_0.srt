1
00:00:00,183 --> 00:00:00,184
1. try

2
00:00:00,185 --> 00:00:05,839
1. utils.openBrowserAndNavigateToPMT()

3
00:00:05,839 --> 00:00:05,861
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:05,881 --> 00:00:05,883
9. TAB = "Wallet_Replace"

5
00:00:05,883 --> 00:00:05,886
13. driver = getWebDriver()

6
00:00:05,887 --> 00:00:08,448
17. utils.goToWallets()

7
00:00:08,448 --> 00:00:09,346
21. clickAuthorizePayment = xpath("//a[normalize-space()='Replace']")).click()

8
00:00:09,346 --> 00:00:10,279
25. utils.selectEnvironment(ENV)

9
00:00:10,279 --> 00:00:10,511
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:10,511 --> 00:00:11,227
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:11,248 --> 00:00:11,286
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:11,289 --> 00:00:11,327
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:11,335 --> 00:00:11,382
45. accountId = accountId

14
00:00:11,402 --> 00:00:11,444
49. accessToken = accessToken

15
00:00:11,479 --> 00:00:11,579
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:11,596 --> 00:00:11,618
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:11,638 --> 00:00:11,700
1. sendRequestTextBox.clear()

18
00:00:11,735 --> 00:00:11,759
5. idToBeReplaced = testdata["idToBeReplaced"][i]

19
00:00:11,777 --> 00:00:11,800
9. paymentMethod = testdata["paymentMethod"][i]

20
00:00:11,819 --> 00:00:11,842
13. cardNumber = testdata["cardNumber"][i]

21
00:00:11,860 --> 00:00:11,882
17. CNumber = cardNumber.replaceAll("\.0$", "")

22
00:00:11,902 --> 00:00:11,962
21. expirationMonth = testdata["expirationMonth"][i]

23
00:00:11,994 --> 00:00:12,018
25. xMonth = expirationMonth.replaceAll("\.0$", "")

24
00:00:12,037 --> 00:00:12,061
29. expirationYear = testdata["expirationYear"][i]

25
00:00:12,081 --> 00:00:12,126
33. xYear = expirationYear.replaceAll("\.0$", "")

26
00:00:12,147 --> 00:00:12,171
37. cardholderName = testdata["cardholderName"][i]

27
00:00:12,171 --> 00:00:12,173
41. nickName = testdata["nickName"][i]

28
00:00:12,174 --> 00:00:12,176
45. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

29
00:00:12,176 --> 00:00:12,177
49. request = {
    "idToBeReplaced": "$idToBeReplaced",
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

30
00:00:12,178 --> 00:00:12,179
53. restRequest = JsonSlurper().parseText(request)

31
00:00:12,180 --> 00:00:12,182
57. prettyJson = JsonBuilder(restRequest).toPrettyString()

32
00:00:12,182 --> 00:00:12,184
61. println(prettyJson)

33
00:00:12,184 --> 00:00:13,348
65. sendRequestTextBox.sendKeys(prettyJson)

34
00:00:13,348 --> 00:00:13,658
69. utils.clickSendButton()

35
00:00:13,658 --> 00:00:16,687
73. delay(3)

36
00:00:16,688 --> 00:00:19,255
77. response = utils.getResponse()

37
00:00:19,256 --> 00:00:19,257
81. println(response)

38
00:00:19,257 --> 00:00:19,258
85. validation1 = testdata["ContainsValidation"][i]

39
00:00:19,259 --> 00:00:19,260
89. println(validation1)

40
00:00:19,260 --> 00:00:19,261
93. validation2 = testdata["NotContainsValidation"][i]

41
00:00:19,262 --> 00:00:19,263
97. println(validation2)

42
00:00:19,263 --> 00:00:19,265
101. println(testdata["TCNumber"][i])

43
00:00:19,265 --> 00:00:19,266
105. assert response.contains(validation1)

44
00:00:19,266 --> 00:00:19,273
109. assert response.contains(validation2) == false

45
00:00:19,273 --> 00:00:19,298
1. sendRequestTextBox.clear()

46
00:00:19,298 --> 00:00:19,300
5. idToBeReplaced = testdata["idToBeReplaced"][i]

47
00:00:19,322 --> 00:00:19,342
9. paymentMethod = testdata["paymentMethod"][i]

48
00:00:19,378 --> 00:00:19,380
13. cardNumber = testdata["cardNumber"][i]

49
00:00:19,402 --> 00:00:19,403
17. CNumber = cardNumber.replaceAll("\.0$", "")

50
00:00:19,403 --> 00:00:19,405
21. expirationMonth = testdata["expirationMonth"][i]

51
00:00:19,405 --> 00:00:19,408
25. xMonth = expirationMonth.replaceAll("\.0$", "")

52
00:00:19,409 --> 00:00:19,415
2. println(An unexpected error occurred: $e.message)

53
00:00:19,415 --> 00:00:19,418
6. e.printStackTrace()

54
00:00:19,419 --> 00:00:21,548
1. utils.closeBrowser()

