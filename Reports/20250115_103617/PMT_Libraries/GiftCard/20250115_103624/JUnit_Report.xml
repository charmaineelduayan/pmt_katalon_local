<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="GiftCard" time="75.824" tests="1" failures="0" errors="0">
   <testsuite name="GiftCard" tests="1" failures="0" errors="0" time="75.824" skipped="0" timestamp="15-01-2025T10:41:40" hostname="manilacel - localhost" id="Test Suites/PMT_Libraries/GiftCard">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform"/>
         <property name="logFolder" value="/Users/manilacel/Library/CloudStorage/OneDrive-RoyalCaribbeanGroup/PMT/Git/payment.web-utility-automation/payment.web-utility-automation/Reports/20250115_103617/PMT_Libraries/GiftCard/20250115_103624"/>
         <property name="logFiles" value="/Users/manilacel/Library/CloudStorage/OneDrive-RoyalCaribbeanGroup/PMT/Git/payment.web-utility-automation/payment.web-utility-automation/Reports/20250115_103617/PMT_Libraries/GiftCard/20250115_103624/execution0.log"/>
         <property name="attachments" value="keyes/keyes-Sample Visual Screenshot.png, keyes/keyes-Sample Visual Screenshot.png, keyes/keyes-Sample Visual Screenshot.png, keyes/keyes-Sample Visual Screenshot.png, keyes/keyes-Sample Visual Screenshot.png"/>
         <property name="hostName" value="manilacel - localhost"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="9.5.0.217"/>
         <property name="browser" value="Chrome 131.0.0.0"/>
         <property name="hostAddress" value="127.0.0.1"/>
         <property name="sessionId" value="3ea737e3cbe7af82f42484d9fffcc5d7"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Mac OS X"/>
      </properties>
      <testcase name="Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance" time="75.708" classname="Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance" status="PASSED">
         <system-out><![CDATA[15-01-2025T10:41:40 - [TEST_CASE][PASSED] - Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance: Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance

15-01-2025T10:41:42 - [TEST_STEP][PASSED] - try: null

15-01-2025T10:41:42 - [TEST_STEP][PASSED] - utils.openBrowserAndNavigateToPMT(): Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

15-01-2025T10:41:42 - [MESSAGE][INFO] - Starting 'Chrome' driver

15-01-2025T10:41:42 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

15-01-2025T10:41:45 - [MESSAGE][PASSED] - Browser is opened with url: ''

15-01-2025T10:41:45 - [MESSAGE][PASSED] - Current window maximized

15-01-2025T10:41:49 - [MESSAGE][PASSED] - Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

15-01-2025T10:41:49 - [TEST_STEP][PASSED] - EXCEL_PATH = "./Data Files/TestData.xlsx": null

15-01-2025T10:41:49 - [TEST_STEP][PASSED] - TAB = "GiftCards": null

15-01-2025T10:41:49 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

15-01-2025T10:41:49 - [TEST_STEP][PASSED] - utils.goToGiftCards(): null

15-01-2025T10:41:51 - [TEST_STEP][PASSED] - utils.selectEnvironment(ENV): null

15-01-2025T10:41:52 - [TEST_STEP][PASSED] - sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']")): null

15-01-2025T10:41:53 - [TEST_STEP][PASSED] - testdata = getdata.fromExcel(EXCEL_PATH, "GiftCards"): null

15-01-2025T10:41:53 - [TEST_STEP][PASSED] - for ([i = 0, i < testdata.size(), (i++)]): null

15-01-2025T10:41:53 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

15-01-2025T10:41:58 - [MESSAGE][PASSED] - Delayed 5 second(s)

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - println(prettyJson): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

15-01-2025T10:41:58 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

15-01-2025T10:42:00 - [TEST_STEP][PASSED] - takeFullPageScreenshotAsCheckpoint("Sample Visual Screenshot"): Taking screenshot successfully

15-01-2025T10:42:01 - [MESSAGE][INFO] - 0 hidden object(s)

15-01-2025T10:42:01 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|keyes/keyes-Sample Visual Screenshot.png]]

15-01-2025T10:42:01 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

15-01-2025T10:42:04 - [MESSAGE][PASSED] - Delayed 3 second(s)

15-01-2025T10:42:04 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - println(response): null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - println(validation1): null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - println(validation2): null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

15-01-2025T10:42:11 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

15-01-2025T10:42:16 - [MESSAGE][PASSED] - Delayed 5 second(s)

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - println(prettyJson): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

15-01-2025T10:42:16 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

15-01-2025T10:42:17 - [TEST_STEP][PASSED] - takeFullPageScreenshotAsCheckpoint("Sample Visual Screenshot"): Taking screenshot successfully

15-01-2025T10:42:18 - [MESSAGE][INFO] - 0 hidden object(s)

15-01-2025T10:42:18 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|keyes/keyes-Sample Visual Screenshot.png]]

15-01-2025T10:42:18 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

15-01-2025T10:42:21 - [MESSAGE][PASSED] - Delayed 3 second(s)

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - println(response): null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - println(validation1): null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - println(validation2): null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

15-01-2025T10:42:21 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

15-01-2025T10:42:26 - [MESSAGE][PASSED] - Delayed 5 second(s)

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - println(prettyJson): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

15-01-2025T10:42:26 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

15-01-2025T10:42:27 - [TEST_STEP][PASSED] - takeFullPageScreenshotAsCheckpoint("Sample Visual Screenshot"): Taking screenshot successfully

15-01-2025T10:42:28 - [MESSAGE][INFO] - 0 hidden object(s)

15-01-2025T10:42:28 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|keyes/keyes-Sample Visual Screenshot.png]]

15-01-2025T10:42:28 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

15-01-2025T10:42:31 - [MESSAGE][PASSED] - Delayed 3 second(s)

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - println(response): null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - println(validation1): null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - println(validation2): null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

15-01-2025T10:42:31 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

15-01-2025T10:42:36 - [MESSAGE][PASSED] - Delayed 5 second(s)

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - println(prettyJson): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

15-01-2025T10:42:36 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

15-01-2025T10:42:37 - [TEST_STEP][PASSED] - takeFullPageScreenshotAsCheckpoint("Sample Visual Screenshot"): Taking screenshot successfully

15-01-2025T10:42:38 - [MESSAGE][INFO] - 0 hidden object(s)

15-01-2025T10:42:38 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|keyes/keyes-Sample Visual Screenshot.png]]

15-01-2025T10:42:38 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

15-01-2025T10:42:41 - [MESSAGE][PASSED] - Delayed 3 second(s)

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - println(response): null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - println(validation1): null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - println(validation2): null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

15-01-2025T10:42:41 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

15-01-2025T10:42:46 - [MESSAGE][PASSED] - Delayed 5 second(s)

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - cardNumber = testdata["cardNumber"][i]: null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - CNumber = cardNumber.replaceAll("\.0$", ""): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - securityCode = testdata["securityCode"][i]: null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - SC = securityCode.replaceAll("\.0$", ""): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$cardNumber",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear",
			"securityCode": "$securityCode"
			}: null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - println(prettyJson): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

15-01-2025T10:42:46 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

15-01-2025T10:42:47 - [TEST_STEP][PASSED] - takeFullPageScreenshotAsCheckpoint("Sample Visual Screenshot"): Taking screenshot successfully

15-01-2025T10:42:48 - [MESSAGE][INFO] - 0 hidden object(s)

15-01-2025T10:42:48 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|keyes/keyes-Sample Visual Screenshot.png]]

15-01-2025T10:42:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

15-01-2025T10:42:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - println(response): null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - println(validation1): null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - println(validation2): null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - Finally: Browser is closed

15-01-2025T10:42:51 - [TEST_STEP][PASSED] - utils.closeBrowser(): Browser is closed

15-01-2025T10:42:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

15-01-2025T10:42:54 - [MESSAGE][PASSED] - Browser is closed

15-01-2025T10:42:56 - [TEST_STEP][PASSED] - Video: Video recording for test case 'Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance' .

15-01-2025T10:42:56 - [MESSAGE][INFO] - Video recording for test case 'Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance' .]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[15-01-2025T10:41:40 - [TEST_SUITE][PASSED] - GiftCard: Test Cases/Web_Utilities_TestCases/GiftCard/TC1_GiftCard_GetBalance]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
