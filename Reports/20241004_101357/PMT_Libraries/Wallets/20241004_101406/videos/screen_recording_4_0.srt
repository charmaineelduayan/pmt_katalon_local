1
00:00:00,605 --> 00:00:00,622
1. try

2
00:00:00,644 --> 00:00:09,472
1. utils.openBrowserAndNavigateToPMT()

3
00:00:09,473 --> 00:00:09,478
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:09,478 --> 00:00:09,481
9. TAB = "Wallet_Delete"

5
00:00:09,482 --> 00:00:09,488
13. driver = getWebDriver()

6
00:00:09,489 --> 00:00:12,904
17. utils.goToWallets()

7
00:00:12,914 --> 00:00:13,684
21. clickAuthorizePayment = xpath("//a[normalize-space()='Delete']")).click()

8
00:00:13,704 --> 00:00:15,615
25. utils.selectEnvironment(ENV)

9
00:00:15,616 --> 00:00:15,866
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:15,905 --> 00:00:16,405
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:16,405 --> 00:00:16,459
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:16,459 --> 00:00:16,501
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:16,502 --> 00:00:16,505
45. accountId = accountId

14
00:00:16,506 --> 00:00:16,509
49. accessToken = accessToken

15
00:00:16,510 --> 00:00:16,668
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:16,669 --> 00:00:16,671
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:16,672 --> 00:00:16,726
1. sendRequestTextBox.clear()

18
00:00:16,727 --> 00:00:16,730
5. cardNumber = testdata["cardNumber"][i]

19
00:00:16,751 --> 00:00:16,791
9. CNumber = cardNumber.replaceAll("\.0$", "")

20
00:00:16,828 --> 00:00:16,851
13. expirationMonth = testdata["expirationMonth"][i]

21
00:00:16,871 --> 00:00:16,894
17. xMonth = expirationMonth.replaceAll("\.0$", "")

22
00:00:16,912 --> 00:00:16,938
21. expirationYear = testdata["expirationYear"][i]

23
00:00:16,954 --> 00:00:16,999
25. xYear = expirationYear.replaceAll("\.0$", "")

24
00:00:17,013 --> 00:00:17,052
29. request = {
		"cardNumber": "$cardNumber",
		"expirationMonth": "$expirationMonth",
		"expirationYear": "$expirationYear",
		"accessToken": "$accountId",
		"accountId": "$accessToken"
		}

25
00:00:17,053 --> 00:00:17,057
33. restRequest = JsonSlurper().parseText(request)

26
00:00:17,057 --> 00:00:17,063
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

27
00:00:17,064 --> 00:00:17,067
41. println(prettyJson)

28
00:00:17,067 --> 00:00:23,435
45. sendRequestTextBox.sendKeys(prettyJson)

29
00:00:23,468 --> 00:00:23,935
49. utils.clickSendButton()

30
00:00:23,943 --> 00:00:26,994
53. delay(3)

31
00:00:26,995 --> 00:00:28,599
57. response = utils.getResponse()

32
00:00:28,600 --> 00:00:28,603
61. println(response)

33
00:00:28,604 --> 00:00:28,607
65. validation1 = testdata["ContainsValidation"][i]

34
00:00:28,608 --> 00:00:28,611
69. println(validation1)

35
00:00:28,612 --> 00:00:28,615
73. validation2 = testdata["NotContainsValidation"][i]

36
00:00:28,616 --> 00:00:28,619
77. println(validation2)

37
00:00:28,620 --> 00:00:28,623
81. println(testdata["TCNumber"][i])

38
00:00:28,624 --> 00:00:28,630
85. assert response.contains(validation1)

39
00:00:28,631 --> 00:00:32,975
2. takeScreenshot("./screenshots/Failed_Wallet_Delete.png")

40
00:00:32,976 --> 00:00:32,981
6. println(Assertion failed: $e.message)

41
00:00:32,982 --> 00:00:32,990
10. e.printStackTrace()

42
00:00:32,991 --> 00:00:35,247
1. utils.closeBrowser()

