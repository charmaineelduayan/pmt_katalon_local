1
00:00:01,539 --> 00:00:01,544
1. try

2
00:00:01,546 --> 00:00:20,067
1. utils.openBrowserAndNavigateToPMT()

3
00:00:20,087 --> 00:00:20,091
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:20,092 --> 00:00:20,095
9. TAB = "Wallet_Replace"

5
00:00:20,095 --> 00:00:20,101
13. driver = getWebDriver()

6
00:00:20,101 --> 00:00:21,787
17. utils.goToWallets()

7
00:00:21,789 --> 00:00:22,344
21. clickAuthorizePayment = xpath("//a[normalize-space()='Replace']")).click()

8
00:00:22,345 --> 00:00:23,457
25. utils.selectEnvironment(ENV)

9
00:00:23,458 --> 00:00:23,721
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:23,722 --> 00:00:24,179
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:24,180 --> 00:00:24,230
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:24,231 --> 00:00:24,287
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:24,288 --> 00:00:24,292
45. accountId = accountId

14
00:00:24,292 --> 00:00:24,297
49. accessToken = accessToken

15
00:00:24,297 --> 00:00:24,671
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:24,673 --> 00:00:24,695
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:24,712 --> 00:00:24,794
1. sendRequestTextBox.clear()

18
00:00:24,795 --> 00:00:24,800
5. idToBeReplaced = testdata["idToBeReplaced"][i]

19
00:00:24,800 --> 00:00:24,804
9. paymentMethod = testdata["paymentMethod"][i]

20
00:00:24,805 --> 00:00:24,810
13. cardNumber = testdata["cardNumber"][i]

21
00:00:24,810 --> 00:00:24,814
17. CNumber = cardNumber.replaceAll("\.0$", "")

22
00:00:24,815 --> 00:00:24,820
21. expirationMonth = testdata["expirationMonth"][i]

23
00:00:24,820 --> 00:00:24,832
25. xMonth = expirationMonth.replaceAll("\.0$", "")

24
00:00:24,833 --> 00:00:24,838
29. expirationYear = testdata["expirationYear"][i]

25
00:00:24,839 --> 00:00:24,854
33. xYear = expirationYear.replaceAll("\.0$", "")

26
00:00:24,857 --> 00:00:24,862
37. cardholderName = testdata["cardholderName"][i]

27
00:00:24,863 --> 00:00:24,906
41. nickName = testdata["nickName"][i]

28
00:00:24,907 --> 00:00:24,913
45. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

29
00:00:24,913 --> 00:00:24,917
49. request = {
    "idToBeReplaced": "$idToBeReplaced",
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

30
00:00:24,919 --> 00:00:24,927
53. restRequest = JsonSlurper().parseText(request)

31
00:00:24,928 --> 00:00:24,935
57. prettyJson = JsonBuilder(restRequest).toPrettyString()

32
00:00:24,936 --> 00:00:24,947
61. println(prettyJson)

33
00:00:24,948 --> 00:00:33,122
65. sendRequestTextBox.sendKeys(prettyJson)

34
00:00:33,124 --> 00:00:33,692
69. utils.clickSendButton()

35
00:00:33,693 --> 00:00:36,701
73. delay(3)

36
00:00:36,702 --> 00:00:39,406
77. response = utils.getResponse()

37
00:00:39,407 --> 00:00:39,410
81. println(response)

38
00:00:39,411 --> 00:00:39,417
85. validation1 = testdata["ContainsValidation"][i]

39
00:00:39,418 --> 00:00:39,422
89. println(validation1)

40
00:00:39,422 --> 00:00:39,426
93. validation2 = testdata["NotContainsValidation"][i]

41
00:00:39,427 --> 00:00:39,430
97. println(validation2)

42
00:00:39,431 --> 00:00:39,434
101. println(testdata["TCNumber"][i])

43
00:00:39,435 --> 00:00:39,438
105. assert response.contains(validation1)

44
00:00:39,439 --> 00:00:39,457
109. assert response.contains(validation2) == false

45
00:00:39,457 --> 00:00:39,547
1. sendRequestTextBox.clear()

46
00:00:39,547 --> 00:00:39,549
5. idToBeReplaced = testdata["idToBeReplaced"][i]

47
00:00:39,549 --> 00:00:39,551
9. paymentMethod = testdata["paymentMethod"][i]

48
00:00:39,552 --> 00:00:39,554
13. cardNumber = testdata["cardNumber"][i]

49
00:00:39,555 --> 00:00:39,556
17. CNumber = cardNumber.replaceAll("\.0$", "")

50
00:00:39,557 --> 00:00:39,559
21. expirationMonth = testdata["expirationMonth"][i]

51
00:00:39,560 --> 00:00:39,569
25. xMonth = expirationMonth.replaceAll("\.0$", "")

52
00:00:39,570 --> 00:00:39,589
2. println(An unexpected error occurred: $e.message)

53
00:00:39,589 --> 00:00:39,596
6. e.printStackTrace()

54
00:00:39,597 --> 00:00:41,843
1. utils.closeBrowser()

