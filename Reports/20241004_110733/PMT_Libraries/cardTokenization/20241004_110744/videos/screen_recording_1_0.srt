1
00:00:01,286 --> 00:00:01,340
1. try

2
00:00:01,363 --> 00:00:15,883
1. utils.openBrowserAndNavigateToPMT()

3
00:00:15,919 --> 00:00:15,971
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:15,972 --> 00:00:15,982
9. TAB = "cardTokenization_Generate"

5
00:00:15,983 --> 00:00:16,025
13. driver = getWebDriver()

6
00:00:16,026 --> 00:00:17,516
17. utils.goToCardTokenization()

7
00:00:17,517 --> 00:00:18,029
21. clickGenerateToken = xpath("//a[normalize-space()='Generate Token']")).click()

8
00:00:18,029 --> 00:00:19,384
25. utils.selectEnvironment(ENV)

9
00:00:19,385 --> 00:00:19,633
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:19,634 --> 00:00:21,306
33. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

11
00:00:21,307 --> 00:00:21,315
37. for ([i = 0, i < testdata.size(), (i++)])

12
00:00:21,316 --> 00:00:21,378
1. sendRequestTextBox.clear()

13
00:00:21,378 --> 00:00:21,395
5. encryptedCard = testdata["encryptedCard"][i]

14
00:00:21,400 --> 00:00:21,452
9. CNumber = encryptedCard.replaceAll("\.0$", "")

15
00:00:21,454 --> 00:00:21,652
13. expirationMonth = testdata["expirationMonth"][i]

16
00:00:21,652 --> 00:00:21,664
17. xMonth = expirationMonth.replaceAll("\.0$", "")

17
00:00:21,665 --> 00:00:21,670
21. expirationYear = testdata["expirationYear"][i]

18
00:00:21,671 --> 00:00:21,676
25. xYear = expirationYear.replaceAll("\.0$", "")

19
00:00:21,679 --> 00:00:21,786
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

20
00:00:21,817 --> 00:00:21,912
33. restRequest = JsonSlurper().parseText(request)

21
00:00:21,912 --> 00:00:21,963
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

22
00:00:21,966 --> 00:00:21,973
41. println(prettyJson)

23
00:00:21,973 --> 00:00:22,217
45. sendRequestTextBox.sendKeys(prettyJson)

24
00:00:22,218 --> 00:00:22,595
49. utils.clickSendButton()

25
00:00:22,595 --> 00:00:25,631
53. delay(3)

26
00:00:25,632 --> 00:00:26,503
57. response = utils.getResponse()

27
00:00:26,504 --> 00:00:26,507
61. println(response)

28
00:00:26,508 --> 00:00:26,512
65. validation1 = testdata["ContainsValidation"][i]

29
00:00:26,512 --> 00:00:26,516
69. println(validation1)

30
00:00:26,517 --> 00:00:26,521
73. validation2 = testdata["NotContainsValidation"][i]

31
00:00:26,522 --> 00:00:26,526
77. println(validation2)

32
00:00:26,527 --> 00:00:26,531
81. println(testdata["TCNumber"][i])

33
00:00:26,532 --> 00:00:26,549
85. assert response.contains(validation1)

34
00:00:26,550 --> 00:00:26,566
89. assert response.contains(validation2) == false

35
00:00:26,567 --> 00:00:26,634
1. sendRequestTextBox.clear()

36
00:00:26,634 --> 00:00:26,636
5. encryptedCard = testdata["encryptedCard"][i]

37
00:00:26,636 --> 00:00:26,638
9. CNumber = encryptedCard.replaceAll("\.0$", "")

38
00:00:26,638 --> 00:00:26,640
13. expirationMonth = testdata["expirationMonth"][i]

39
00:00:26,641 --> 00:00:26,642
17. xMonth = expirationMonth.replaceAll("\.0$", "")

40
00:00:26,642 --> 00:00:26,645
21. expirationYear = testdata["expirationYear"][i]

41
00:00:26,645 --> 00:00:26,648
25. xYear = expirationYear.replaceAll("\.0$", "")

42
00:00:26,648 --> 00:00:26,651
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

43
00:00:26,651 --> 00:00:26,654
33. restRequest = JsonSlurper().parseText(request)

44
00:00:26,655 --> 00:00:26,657
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

45
00:00:26,658 --> 00:00:26,660
41. println(prettyJson)

46
00:00:26,660 --> 00:00:26,978
45. sendRequestTextBox.sendKeys(prettyJson)

47
00:00:26,979 --> 00:00:27,325
49. utils.clickSendButton()

48
00:00:27,326 --> 00:00:30,331
53. delay(3)

49
00:00:30,332 --> 00:00:30,586
57. response = utils.getResponse()

50
00:00:30,586 --> 00:00:30,588
61. println(response)

51
00:00:30,588 --> 00:00:30,590
65. validation1 = testdata["ContainsValidation"][i]

52
00:00:30,590 --> 00:00:30,592
69. println(validation1)

53
00:00:30,593 --> 00:00:30,594
73. validation2 = testdata["NotContainsValidation"][i]

54
00:00:30,595 --> 00:00:30,596
77. println(validation2)

55
00:00:30,597 --> 00:00:30,598
81. println(testdata["TCNumber"][i])

56
00:00:30,599 --> 00:00:30,600
85. assert response.contains(validation1)

57
00:00:30,601 --> 00:00:30,602
89. assert response.contains(validation2) == false

58
00:00:30,603 --> 00:00:30,668
1. sendRequestTextBox.clear()

59
00:00:30,668 --> 00:00:30,670
5. encryptedCard = testdata["encryptedCard"][i]

60
00:00:30,671 --> 00:00:30,672
9. CNumber = encryptedCard.replaceAll("\.0$", "")

61
00:00:30,672 --> 00:00:30,674
13. expirationMonth = testdata["expirationMonth"][i]

62
00:00:30,674 --> 00:00:30,676
17. xMonth = expirationMonth.replaceAll("\.0$", "")

63
00:00:30,677 --> 00:00:30,679
21. expirationYear = testdata["expirationYear"][i]

64
00:00:30,679 --> 00:00:30,681
25. xYear = expirationYear.replaceAll("\.0$", "")

65
00:00:30,682 --> 00:00:30,684
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

66
00:00:30,684 --> 00:00:30,686
33. restRequest = JsonSlurper().parseText(request)

67
00:00:30,687 --> 00:00:30,689
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

68
00:00:30,690 --> 00:00:30,691
41. println(prettyJson)

69
00:00:30,692 --> 00:00:30,995
45. sendRequestTextBox.sendKeys(prettyJson)

70
00:00:30,995 --> 00:00:31,333
49. utils.clickSendButton()

71
00:00:31,334 --> 00:00:34,339
53. delay(3)

72
00:00:34,339 --> 00:00:34,601
57. response = utils.getResponse()

73
00:00:34,602 --> 00:00:34,603
61. println(response)

74
00:00:34,603 --> 00:00:34,605
65. validation1 = testdata["ContainsValidation"][i]

75
00:00:34,606 --> 00:00:34,607
69. println(validation1)

76
00:00:34,607 --> 00:00:34,609
73. validation2 = testdata["NotContainsValidation"][i]

77
00:00:34,609 --> 00:00:34,610
77. println(validation2)

78
00:00:34,611 --> 00:00:34,612
81. println(testdata["TCNumber"][i])

79
00:00:34,613 --> 00:00:34,614
85. assert response.contains(validation1)

80
00:00:34,614 --> 00:00:34,616
89. assert response.contains(validation2) == false

81
00:00:34,616 --> 00:00:34,736
1. sendRequestTextBox.clear()

82
00:00:34,737 --> 00:00:34,738
5. encryptedCard = testdata["encryptedCard"][i]

83
00:00:34,739 --> 00:00:34,740
9. CNumber = encryptedCard.replaceAll("\.0$", "")

84
00:00:34,740 --> 00:00:34,742
13. expirationMonth = testdata["expirationMonth"][i]

85
00:00:34,742 --> 00:00:34,744
17. xMonth = expirationMonth.replaceAll("\.0$", "")

86
00:00:34,744 --> 00:00:34,746
21. expirationYear = testdata["expirationYear"][i]

87
00:00:34,747 --> 00:00:34,749
25. xYear = expirationYear.replaceAll("\.0$", "")

88
00:00:34,749 --> 00:00:34,751
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

89
00:00:34,751 --> 00:00:34,753
33. restRequest = JsonSlurper().parseText(request)

90
00:00:34,753 --> 00:00:34,755
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

91
00:00:34,756 --> 00:00:34,758
41. println(prettyJson)

92
00:00:34,758 --> 00:00:35,052
45. sendRequestTextBox.sendKeys(prettyJson)

93
00:00:35,053 --> 00:00:35,391
49. utils.clickSendButton()

94
00:00:35,391 --> 00:00:38,399
53. delay(3)

95
00:00:38,400 --> 00:00:38,762
57. response = utils.getResponse()

96
00:00:38,763 --> 00:00:38,764
61. println(response)

97
00:00:38,764 --> 00:00:38,765
65. validation1 = testdata["ContainsValidation"][i]

98
00:00:38,766 --> 00:00:38,767
69. println(validation1)

99
00:00:38,767 --> 00:00:38,769
73. validation2 = testdata["NotContainsValidation"][i]

100
00:00:38,769 --> 00:00:38,770
77. println(validation2)

101
00:00:38,771 --> 00:00:38,772
81. println(testdata["TCNumber"][i])

102
00:00:38,772 --> 00:00:38,773
85. assert response.contains(validation1)

103
00:00:38,774 --> 00:00:38,778
89. assert response.contains(validation2) == false

104
00:00:38,779 --> 00:00:41,068
1. utils.closeBrowser()

