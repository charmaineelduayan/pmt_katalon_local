1
00:00:02,143 --> 00:00:02,181
1. try

2
00:00:02,209 --> 00:00:18,005
1. utils.openBrowserAndNavigateToPMT()

3
00:00:18,006 --> 00:00:18,010
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:18,011 --> 00:00:18,015
9. TAB = "Wallet_Update"

5
00:00:18,015 --> 00:00:18,033
13. driver = getWebDriver()

6
00:00:18,034 --> 00:00:20,473
17. utils.goToWallets()

7
00:00:20,473 --> 00:00:21,594
21. clickAuthorizePayment = xpath("//a[normalize-space()='Update']")).click()

8
00:00:21,594 --> 00:00:23,058
25. utils.selectEnvironment(ENV)

9
00:00:23,059 --> 00:00:23,304
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:23,305 --> 00:00:29,845
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:29,846 --> 00:00:30,154
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:30,156 --> 00:00:30,301
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:30,303 --> 00:00:30,310
45. accountId = accountId

14
00:00:30,311 --> 00:00:30,317
49. accessToken = accessToken

15
00:00:30,317 --> 00:00:32,375
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:32,376 --> 00:00:32,381
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:32,383 --> 00:00:32,428
1. sendRequestTextBox.clear()

18
00:00:32,430 --> 00:00:32,436
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:32,437 --> 00:00:32,442
9. cardNumber = testdata["cardNumber"][i]

20
00:00:32,442 --> 00:00:32,452
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:32,452 --> 00:00:32,457
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:32,457 --> 00:00:32,463
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:32,464 --> 00:00:32,493
25. expirationYear = testdata["expirationYear"][i]

24
00:00:32,494 --> 00:00:32,516
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:32,517 --> 00:00:32,528
33. cardholderName = testdata["cardholderName"][i]

26
00:00:32,529 --> 00:00:32,551
37. nickName = testdata["nickName"][i]

27
00:00:32,552 --> 00:00:32,560
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:32,560 --> 00:00:32,637
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:32,637 --> 00:00:32,648
49. restRequest = JsonSlurper().parseText(request)

30
00:00:32,648 --> 00:00:32,684
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:32,685 --> 00:00:32,695
57. println(prettyJson)

32
00:00:32,696 --> 00:00:39,312
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:39,314 --> 00:00:39,703
65. utils.clickSendButton()

34
00:00:39,704 --> 00:00:42,740
69. delay(3)

35
00:00:42,741 --> 00:00:43,018
73. response = utils.getResponse()

36
00:00:43,019 --> 00:00:43,023
77. println(response)

37
00:00:43,023 --> 00:00:43,028
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:43,029 --> 00:00:43,032
85. println(validation1)

39
00:00:43,033 --> 00:00:43,037
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:43,037 --> 00:00:43,041
93. println(validation2)

41
00:00:43,042 --> 00:00:43,047
97. println(testdata["TCNumber"][i])

42
00:00:43,047 --> 00:00:43,150
101. assert response.contains(validation1)

43
00:00:43,170 --> 00:00:45,791
2. takeScreenshot("./screenshots/Failed_Wallet_Update.png")

44
00:00:45,844 --> 00:00:45,964
6. println(Assertion failed: $e.message)

45
00:00:45,965 --> 00:00:45,976
10. e.printStackTrace()

46
00:00:45,979 --> 00:00:48,304
1. utils.closeBrowser()

