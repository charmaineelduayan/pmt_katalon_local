1
00:00:00,288 --> 00:00:05,517
1. utils.openBrowserAndNavigateToPMT()

2
00:00:05,539 --> 00:00:05,562
5. try

3
00:00:05,563 --> 00:00:05,990
1. callTestCase(findTestCase("Re-Usable Script/SchedulePayment_GetEligibility"), [:], STOP_ON_FAILURE)

4
00:00:05,990 --> 00:00:05,998
1. driver = getWebDriver()

5
00:00:05,998 --> 00:00:07,332
5. utils.goToScheduledPayments()

6
00:00:07,333 --> 00:00:07,818
9. clickGetEligibility = xpath("//a[normalize-space()='Get Eligibility']")).click()

7
00:00:07,818 --> 00:00:07,821
13. EXCEL_PATH = "./Data Files/TestData.xlsx"

8
00:00:07,821 --> 00:00:07,824
17. TAB = "ScheduledPayment_GetEligibility"

9
00:00:07,824 --> 00:00:08,375
21. utils.selectEnvironment(ENV)

10
00:00:08,375 --> 00:00:08,843
25. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

11
00:00:08,843 --> 00:00:08,848
29. for ([TestScenarioNumber = 0, TestScenarioNumber < testdata.size(), (TestScenarioNumber++)])

12
00:00:08,848 --> 00:00:08,852
1. println(testdata.size())

13
00:00:08,853 --> 00:00:46,466
5. getBookingData = CreateAndRetrieveBooking.Data(EXCEL_PATH, TAB, TestScenarioNumber)

14
00:00:46,467 --> 00:00:46,470
9. println(getBookingData["BookingId"])

15
00:00:46,470 --> 00:00:46,473
13. println(getBookingData["BookingAccessToken"])

16
00:00:46,473 --> 00:00:46,476
17. println(getBookingData["PassengerId1"])

17
00:00:46,476 --> 00:00:46,478
21. println(getBookingData["PassengerId2"])

18
00:00:46,479 --> 00:00:51,488
25. delay(5)

19
00:00:51,488 --> 00:00:51,492
29. bookingIdCol = testdata["BookingId"][TestScenarioNumber]

20
00:00:51,492 --> 00:00:51,494
33. BookingId = getBookingData["BookingId"]

21
00:00:51,494 --> 00:00:51,497
37. replaceBookingId = bookingIdCol.replace("BookingId", BookingId)

22
00:00:51,498 --> 00:00:51,499
41. println(replaceBookingId)

23
00:00:51,500 --> 00:00:51,731
45. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

24
00:00:51,732 --> 00:00:51,760
49. sendRequestTextBox.clear()

25
00:00:51,760 --> 00:00:51,762
53. request = BookingId

26
00:00:51,762 --> 00:00:51,873
57. sendRequestTextBox.sendKeys(request)

27
00:00:51,874 --> 00:00:51,878
61. println(request)

28
00:00:51,878 --> 00:00:52,184
65. utils.clickSendButton()

29
00:00:52,185 --> 00:00:55,195
69. delay(3)

30
00:00:55,196 --> 00:00:55,650
73. response = utils.getResponse()

31
00:00:55,650 --> 00:00:55,652
77. println(response)

32
00:00:55,653 --> 00:00:55,655
81. validation1 = testdata["ContainsValidation"][TestScenarioNumber]

33
00:00:55,655 --> 00:00:55,657
85. println(validation1)

34
00:00:55,657 --> 00:00:55,660
89. validation2 = testdata["NotContainsValidation"][TestScenarioNumber]

35
00:00:55,661 --> 00:00:55,663
93. println(validation2)

36
00:00:55,663 --> 00:00:55,666
97. println(testdata["TCNumber"][TestScenarioNumber])

37
00:00:55,666 --> 00:00:55,668
101. assert response.contains(validation1)

38
00:00:55,669 --> 00:00:55,670
105. assert response.contains(validation2) == false

39
00:00:55,671 --> 00:00:55,673
109. println("Test Scenario Number: " + TestScenarioNumber)

40
00:00:55,674 --> 00:00:55,675
1. println(testdata.size())

41
00:00:55,675 --> 00:01:20,288
5. getBookingData = CreateAndRetrieveBooking.Data(EXCEL_PATH, TAB, TestScenarioNumber)

42
00:01:20,289 --> 00:01:20,290
9. println(getBookingData["BookingId"])

43
00:01:20,290 --> 00:01:20,291
13. println(getBookingData["BookingAccessToken"])

44
00:01:20,291 --> 00:01:20,292
17. println(getBookingData["PassengerId1"])

45
00:01:20,293 --> 00:01:20,293
21. println(getBookingData["PassengerId2"])

46
00:01:20,294 --> 00:01:25,301
25. delay(5)

47
00:01:25,301 --> 00:01:25,302
29. bookingIdCol = testdata["BookingId"][TestScenarioNumber]

48
00:01:25,303 --> 00:01:25,304
33. BookingId = getBookingData["BookingId"]

49
00:01:25,304 --> 00:01:25,305
37. replaceBookingId = bookingIdCol.replace("BookingId", BookingId)

50
00:01:25,306 --> 00:01:25,307
41. println(replaceBookingId)

51
00:01:25,307 --> 00:01:25,530
45. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

52
00:01:25,531 --> 00:01:25,555
49. sendRequestTextBox.clear()

53
00:01:25,556 --> 00:01:25,558
53. request = BookingId

54
00:01:25,559 --> 00:01:25,615
57. sendRequestTextBox.sendKeys(request)

55
00:01:25,615 --> 00:01:25,616
61. println(request)

56
00:01:25,616 --> 00:01:25,880
65. utils.clickSendButton()

57
00:01:25,881 --> 00:01:28,887
69. delay(3)

58
00:01:28,888 --> 00:01:29,122
73. response = utils.getResponse()

59
00:01:29,122 --> 00:01:29,123
77. println(response)

60
00:01:29,123 --> 00:01:29,124
81. validation1 = testdata["ContainsValidation"][TestScenarioNumber]

61
00:01:29,124 --> 00:01:29,125
85. println(validation1)

62
00:01:29,125 --> 00:01:29,126
89. validation2 = testdata["NotContainsValidation"][TestScenarioNumber]

63
00:01:29,126 --> 00:01:29,126
93. println(validation2)

64
00:01:29,127 --> 00:01:29,127
97. println(testdata["TCNumber"][TestScenarioNumber])

65
00:01:29,128 --> 00:01:29,129
101. assert response.contains(validation1)

66
00:01:29,129 --> 00:01:29,130
105. assert response.contains(validation2) == false

67
00:01:29,130 --> 00:01:29,137
109. println("Test Scenario Number: " + TestScenarioNumber)

68
00:01:29,137 --> 00:01:29,155
5. cancelBookingRequest = findTestObject("CancelBooking")

69
00:01:29,156 --> 00:01:32,851
9. cancelBookingResponse = sendRequest(cancelBookingRequest)

70
00:01:32,853 --> 00:01:32,855
13. cancelBookingJsonResponse = JsonSlurper().parseText(cancelBookingResponse.getResponseText())

71
00:01:32,855 --> 00:01:32,857
17. println(cancelBookingJsonResponse)

72
00:01:32,858 --> 00:01:35,049
1. utils.closeBrowser()

