1
00:00:00,177 --> 00:00:00,178
1. try

2
00:00:00,179 --> 00:00:05,077
1. utils.openBrowserAndNavigateToPMT()

3
00:00:05,078 --> 00:00:05,099
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:05,118 --> 00:00:05,120
9. TAB = "Wallet_Add"

5
00:00:05,120 --> 00:00:05,122
13. driver = getWebDriver()

6
00:00:05,122 --> 00:00:06,602
17. utils.goToWallets()

7
00:00:06,603 --> 00:00:07,081
21. clickAdd = xpath("//a[normalize-space()='Add']")).click()

8
00:00:07,081 --> 00:00:07,511
25. utils.selectEnvironment(ENV)

9
00:00:07,525 --> 00:00:07,781
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:07,782 --> 00:00:08,297
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:08,297 --> 00:00:08,310
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:08,311 --> 00:00:08,325
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:08,325 --> 00:00:08,326
45. accountId = accountId

14
00:00:08,327 --> 00:00:08,328
49. accessToken = accessToken

15
00:00:08,328 --> 00:00:08,378
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:08,379 --> 00:00:08,380
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:08,380 --> 00:00:08,406
1. sendRequestTextBox.clear()

18
00:00:08,406 --> 00:00:08,408
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:08,408 --> 00:00:08,410
9. cardNumber = testdata["cardNumber"][i]

20
00:00:08,411 --> 00:00:08,412
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:08,412 --> 00:00:08,413
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:08,414 --> 00:00:08,415
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:08,415 --> 00:00:08,417
25. expirationYear = testdata["expirationYear"][i]

24
00:00:08,417 --> 00:00:08,419
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:08,419 --> 00:00:08,420
33. cardholderName = testdata["cardholderName"][i]

26
00:00:08,420 --> 00:00:08,422
37. nickName = testdata["nickName"][i]

27
00:00:08,422 --> 00:00:08,423
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:08,424 --> 00:00:08,425
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:08,426 --> 00:00:08,427
49. restRequest = JsonSlurper().parseText(request)

30
00:00:08,427 --> 00:00:08,430
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:08,430 --> 00:00:08,432
57. println(prettyJson)

32
00:00:08,432 --> 00:00:09,564
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:09,564 --> 00:00:09,845
65. utils.clickSendButton()

34
00:00:09,845 --> 00:00:12,855
69. delay(3)

35
00:00:12,855 --> 00:00:16,041
73. response = utils.getResponse()

36
00:00:16,042 --> 00:00:16,043
77. println(response)

37
00:00:16,043 --> 00:00:16,045
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:16,045 --> 00:00:16,046
85. println(validation1)

39
00:00:16,046 --> 00:00:16,048
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:16,048 --> 00:00:16,049
93. println(validation2)

41
00:00:16,050 --> 00:00:16,051
97. println(testdata["TCNumber"][i])

42
00:00:16,051 --> 00:00:16,053
101. assert response.contains(validation1)

43
00:00:16,054 --> 00:00:16,964
2. takeScreenshot("./screenshots/Failed_Wallet_Add.png")

44
00:00:16,965 --> 00:00:16,966
6. println(Assertion failed: $e.message)

45
00:00:16,966 --> 00:00:16,968
10. e.printStackTrace()

