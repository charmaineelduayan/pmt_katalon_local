1
00:00:00,224 --> 00:00:00,225
1. try

2
00:00:00,226 --> 00:00:05,905
1. utils.openBrowserAndNavigateToPMT()

3
00:00:05,905 --> 00:00:05,926
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:05,946 --> 00:00:05,949
9. TAB = "Wallet_Replace"

5
00:00:05,949 --> 00:00:05,951
13. driver = getWebDriver()

6
00:00:05,952 --> 00:00:08,623
17. utils.goToWallets()

7
00:00:08,623 --> 00:00:09,515
21. clickAuthorizePayment = xpath("//a[normalize-space()='Replace']")).click()

8
00:00:09,522 --> 00:00:10,481
25. utils.selectEnvironment(ENV)

9
00:00:10,481 --> 00:00:10,710
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:10,711 --> 00:00:11,341
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:11,341 --> 00:00:11,363
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:11,363 --> 00:00:11,382
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:11,383 --> 00:00:11,385
45. accountId = accountId

14
00:00:11,406 --> 00:00:11,408
49. accessToken = accessToken

15
00:00:11,408 --> 00:00:11,472
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:11,472 --> 00:00:11,474
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:11,474 --> 00:00:11,497
1. sendRequestTextBox.clear()

18
00:00:11,498 --> 00:00:11,499
5. idToBeReplaced = testdata["idToBeReplaced"][i]

19
00:00:11,500 --> 00:00:11,502
9. paymentMethod = testdata["paymentMethod"][i]

20
00:00:11,502 --> 00:00:11,504
13. cardNumber = testdata["cardNumber"][i]

21
00:00:11,505 --> 00:00:11,506
17. CNumber = cardNumber.replaceAll("\.0$", "")

22
00:00:11,506 --> 00:00:11,508
21. expirationMonth = testdata["expirationMonth"][i]

23
00:00:11,509 --> 00:00:11,511
25. xMonth = expirationMonth.replaceAll("\.0$", "")

24
00:00:11,511 --> 00:00:11,513
29. expirationYear = testdata["expirationYear"][i]

25
00:00:11,513 --> 00:00:11,515
33. xYear = expirationYear.replaceAll("\.0$", "")

26
00:00:11,516 --> 00:00:11,518
37. cardholderName = testdata["cardholderName"][i]

27
00:00:11,518 --> 00:00:11,520
41. nickName = testdata["nickName"][i]

28
00:00:11,520 --> 00:00:11,522
45. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

29
00:00:11,522 --> 00:00:11,524
49. request = {
    "idToBeReplaced": "$idToBeReplaced",
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

30
00:00:11,525 --> 00:00:11,526
53. restRequest = JsonSlurper().parseText(request)

31
00:00:11,526 --> 00:00:11,529
57. prettyJson = JsonBuilder(restRequest).toPrettyString()

32
00:00:11,529 --> 00:00:11,531
61. println(prettyJson)

33
00:00:11,531 --> 00:00:12,878
65. sendRequestTextBox.sendKeys(prettyJson)

34
00:00:12,881 --> 00:00:13,191
69. utils.clickSendButton()

35
00:00:13,200 --> 00:00:16,233
73. delay(3)

36
00:00:16,234 --> 00:00:18,909
77. response = utils.getResponse()

37
00:00:18,909 --> 00:00:18,911
81. println(response)

38
00:00:18,911 --> 00:00:18,913
85. validation1 = testdata["ContainsValidation"][i]

39
00:00:18,913 --> 00:00:18,914
89. println(validation1)

40
00:00:18,915 --> 00:00:18,916
93. validation2 = testdata["NotContainsValidation"][i]

41
00:00:18,916 --> 00:00:18,918
97. println(validation2)

42
00:00:18,918 --> 00:00:18,919
101. println(testdata["TCNumber"][i])

43
00:00:18,920 --> 00:00:18,921
105. assert response.contains(validation1)

44
00:00:18,921 --> 00:00:18,928
109. assert response.contains(validation2) == false

45
00:00:18,928 --> 00:00:18,949
1. sendRequestTextBox.clear()

46
00:00:18,949 --> 00:00:18,950
5. idToBeReplaced = testdata["idToBeReplaced"][i]

47
00:00:18,951 --> 00:00:18,952
9. paymentMethod = testdata["paymentMethod"][i]

48
00:00:18,953 --> 00:00:18,954
13. cardNumber = testdata["cardNumber"][i]

49
00:00:18,955 --> 00:00:18,956
17. CNumber = cardNumber.replaceAll("\.0$", "")

50
00:00:18,956 --> 00:00:18,958
21. expirationMonth = testdata["expirationMonth"][i]

51
00:00:18,958 --> 00:00:18,963
25. xMonth = expirationMonth.replaceAll("\.0$", "")

52
00:00:18,963 --> 00:00:18,973
2. println(An unexpected error occurred: $e.message)

53
00:00:18,973 --> 00:00:18,977
6. e.printStackTrace()

54
00:00:18,978 --> 00:00:21,136
1. utils.closeBrowser()

