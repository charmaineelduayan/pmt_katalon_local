1
00:00:01,484 --> 00:00:01,524
1. try

2
00:00:01,553 --> 00:00:17,423
1. utils.openBrowserAndNavigateToPMT()

3
00:00:17,427 --> 00:00:17,434
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:17,434 --> 00:00:17,439
9. TAB = "Wallet_Update"

5
00:00:17,440 --> 00:00:17,461
13. driver = getWebDriver()

6
00:00:17,462 --> 00:00:18,977
17. utils.goToWallets()

7
00:00:18,977 --> 00:00:19,477
21. clickAuthorizePayment = xpath("//a[normalize-space()='Update']")).click()

8
00:00:19,478 --> 00:00:20,345
25. utils.selectEnvironment(ENV)

9
00:00:20,346 --> 00:00:20,590
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:20,590 --> 00:00:24,052
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:24,054 --> 00:00:24,145
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:24,145 --> 00:00:24,181
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:24,182 --> 00:00:24,186
45. accountId = accountId

14
00:00:24,187 --> 00:00:24,192
49. accessToken = accessToken

15
00:00:24,192 --> 00:00:25,173
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:25,175 --> 00:00:25,181
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:25,182 --> 00:00:25,222
1. sendRequestTextBox.clear()

18
00:00:25,222 --> 00:00:25,230
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:25,231 --> 00:00:25,235
9. cardNumber = testdata["cardNumber"][i]

20
00:00:25,235 --> 00:00:25,249
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:25,249 --> 00:00:25,255
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:25,256 --> 00:00:25,268
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:25,268 --> 00:00:25,275
25. expirationYear = testdata["expirationYear"][i]

24
00:00:25,276 --> 00:00:25,280
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:25,280 --> 00:00:25,285
33. cardholderName = testdata["cardholderName"][i]

26
00:00:25,286 --> 00:00:25,290
37. nickName = testdata["nickName"][i]

27
00:00:25,291 --> 00:00:25,296
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:25,296 --> 00:00:25,483
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:25,484 --> 00:00:25,494
49. restRequest = JsonSlurper().parseText(request)

30
00:00:25,494 --> 00:00:25,542
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:25,543 --> 00:00:25,552
57. println(prettyJson)

32
00:00:25,553 --> 00:00:31,006
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:31,007 --> 00:00:31,356
65. utils.clickSendButton()

34
00:00:31,358 --> 00:00:34,402
69. delay(3)

35
00:00:34,403 --> 00:00:34,663
73. response = utils.getResponse()

36
00:00:34,665 --> 00:00:34,669
77. println(response)

37
00:00:34,670 --> 00:00:34,673
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:34,674 --> 00:00:34,677
85. println(validation1)

39
00:00:34,678 --> 00:00:34,681
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:34,682 --> 00:00:34,686
93. println(validation2)

41
00:00:34,686 --> 00:00:34,691
97. println(testdata["TCNumber"][i])

42
00:00:34,691 --> 00:00:34,713
101. assert response.contains(validation1)

43
00:00:34,713 --> 00:00:36,491
2. takeScreenshot("/screenshots/Failed_Wallet_Update.png")

44
00:00:36,492 --> 00:00:40,427
1. utils.closeBrowser()

