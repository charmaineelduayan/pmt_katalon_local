1
00:00:00,931 --> 00:00:00,933
1. try

2
00:00:00,934 --> 00:00:07,193
1. utils.openBrowserAndNavigateToPMT()

3
00:00:07,195 --> 00:00:07,198
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:07,198 --> 00:00:07,201
9. TAB = "Wallet_Add"

5
00:00:07,202 --> 00:00:07,207
13. driver = getWebDriver()

6
00:00:07,208 --> 00:00:08,826
17. utils.goToWallets()

7
00:00:08,827 --> 00:00:09,378
21. clickAdd = xpath("//a[normalize-space()='Add']")).click()

8
00:00:09,379 --> 00:00:10,478
25. utils.selectEnvironment(ENV)

9
00:00:10,480 --> 00:00:10,735
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:10,736 --> 00:00:11,107
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:11,109 --> 00:00:11,164
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:11,178 --> 00:00:11,256
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:11,258 --> 00:00:11,261
45. accountId = accountId

14
00:00:11,262 --> 00:00:11,265
49. accessToken = accessToken

15
00:00:11,266 --> 00:00:11,463
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:11,464 --> 00:00:11,467
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:11,468 --> 00:00:11,532
1. sendRequestTextBox.clear()

18
00:00:11,534 --> 00:00:11,539
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:11,539 --> 00:00:11,544
9. cardNumber = testdata["cardNumber"][i]

20
00:00:11,545 --> 00:00:11,549
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:11,550 --> 00:00:11,555
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:11,556 --> 00:00:11,559
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:11,560 --> 00:00:11,566
25. expirationYear = testdata["expirationYear"][i]

24
00:00:11,568 --> 00:00:11,572
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:11,573 --> 00:00:11,580
33. cardholderName = testdata["cardholderName"][i]

26
00:00:11,581 --> 00:00:11,585
37. nickName = testdata["nickName"][i]

27
00:00:11,586 --> 00:00:11,591
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:11,592 --> 00:00:11,596
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:11,597 --> 00:00:11,600
49. restRequest = JsonSlurper().parseText(request)

30
00:00:11,613 --> 00:00:11,657
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:11,659 --> 00:00:11,670
57. println(prettyJson)

32
00:00:11,671 --> 00:00:19,599
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:19,600 --> 00:00:20,052
65. utils.clickSendButton()

34
00:00:20,053 --> 00:00:23,062
69. delay(3)

35
00:00:23,063 --> 00:00:23,869
73. response = utils.getResponse()

36
00:00:23,870 --> 00:00:23,874
77. println(response)

37
00:00:23,874 --> 00:00:23,878
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:23,879 --> 00:00:23,883
85. println(validation1)

39
00:00:23,883 --> 00:00:23,887
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:23,888 --> 00:00:23,892
93. println(validation2)

41
00:00:23,892 --> 00:00:23,896
97. println(testdata["TCNumber"][i])

42
00:00:23,897 --> 00:00:23,905
101. assert response.contains(validation1)

43
00:00:23,905 --> 00:00:26,412
2. takeScreenshot("/screenshots/Failed_Wallet_Add.png")

44
00:00:26,413 --> 00:00:28,747
1. utils.closeBrowser()

