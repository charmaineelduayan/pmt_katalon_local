1
00:00:00,240 --> 00:00:00,241
1. try

2
00:00:00,242 --> 00:00:05,511
1. utils.openBrowserAndNavigateToPMT()

3
00:00:05,532 --> 00:00:05,554
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:05,575 --> 00:00:05,579
9. TAB = "Wallet_Replace"

5
00:00:05,580 --> 00:00:05,584
13. driver = getWebDriver()

6
00:00:05,585 --> 00:00:06,961
17. utils.goToWallets()

7
00:00:06,962 --> 00:00:07,440
21. clickAuthorizePayment = xpath("//a[normalize-space()='Replace']")).click()

8
00:00:07,440 --> 00:00:07,860
25. utils.selectEnvironment(ENV)

9
00:00:07,879 --> 00:00:08,122
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:08,128 --> 00:00:08,700
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:08,701 --> 00:00:08,723
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:08,723 --> 00:00:08,748
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:08,749 --> 00:00:08,751
45. accountId = accountId

14
00:00:08,751 --> 00:00:08,753
49. accessToken = accessToken

15
00:00:08,753 --> 00:00:08,846
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:08,846 --> 00:00:08,848
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:08,849 --> 00:00:08,880
1. sendRequestTextBox.clear()

18
00:00:08,880 --> 00:00:08,883
5. idToBeReplaced = testdata["idToBeReplaced"][i]

19
00:00:08,884 --> 00:00:08,886
9. paymentMethod = testdata["paymentMethod"][i]

20
00:00:08,887 --> 00:00:08,889
13. cardNumber = testdata["cardNumber"][i]

21
00:00:08,911 --> 00:00:08,913
17. CNumber = cardNumber.replaceAll("\.0$", "")

22
00:00:08,913 --> 00:00:08,916
21. expirationMonth = testdata["expirationMonth"][i]

23
00:00:08,917 --> 00:00:08,919
25. xMonth = expirationMonth.replaceAll("\.0$", "")

24
00:00:08,920 --> 00:00:08,922
29. expirationYear = testdata["expirationYear"][i]

25
00:00:08,922 --> 00:00:08,924
33. xYear = expirationYear.replaceAll("\.0$", "")

26
00:00:08,925 --> 00:00:08,927
37. cardholderName = testdata["cardholderName"][i]

27
00:00:08,928 --> 00:00:08,931
41. nickName = testdata["nickName"][i]

28
00:00:08,931 --> 00:00:08,934
45. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

29
00:00:08,934 --> 00:00:08,937
49. request = {
    "idToBeReplaced": "$idToBeReplaced",
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

30
00:00:08,937 --> 00:00:08,940
53. restRequest = JsonSlurper().parseText(request)

31
00:00:08,940 --> 00:00:08,945
57. prettyJson = JsonBuilder(restRequest).toPrettyString()

32
00:00:08,945 --> 00:00:08,947
61. println(prettyJson)

33
00:00:08,947 --> 00:00:10,750
65. sendRequestTextBox.sendKeys(prettyJson)

34
00:00:10,756 --> 00:00:11,080
69. utils.clickSendButton()

35
00:00:11,086 --> 00:00:14,112
73. delay(3)

36
00:00:14,113 --> 00:00:17,270
77. response = utils.getResponse()

37
00:00:17,271 --> 00:00:17,272
81. println(response)

38
00:00:17,272 --> 00:00:17,273
85. validation1 = testdata["ContainsValidation"][i]

39
00:00:17,274 --> 00:00:17,275
89. println(validation1)

40
00:00:17,275 --> 00:00:17,277
93. validation2 = testdata["NotContainsValidation"][i]

41
00:00:17,277 --> 00:00:17,279
97. println(validation2)

42
00:00:17,279 --> 00:00:17,280
101. println(testdata["TCNumber"][i])

43
00:00:17,281 --> 00:00:17,282
105. assert response.contains(validation1)

44
00:00:17,283 --> 00:00:17,290
109. assert response.contains(validation2) == false

45
00:00:17,290 --> 00:00:17,331
1. sendRequestTextBox.clear()

46
00:00:17,332 --> 00:00:17,333
5. idToBeReplaced = testdata["idToBeReplaced"][i]

47
00:00:17,334 --> 00:00:17,335
9. paymentMethod = testdata["paymentMethod"][i]

48
00:00:17,336 --> 00:00:17,337
13. cardNumber = testdata["cardNumber"][i]

49
00:00:17,337 --> 00:00:17,338
17. CNumber = cardNumber.replaceAll("\.0$", "")

50
00:00:17,339 --> 00:00:17,340
21. expirationMonth = testdata["expirationMonth"][i]

51
00:00:17,340 --> 00:00:17,345
25. xMonth = expirationMonth.replaceAll("\.0$", "")

52
00:00:17,345 --> 00:00:17,355
2. println(An unexpected error occurred: $e.message)

53
00:00:17,356 --> 00:00:17,359
6. e.printStackTrace()

54
00:00:17,359 --> 00:00:19,492
1. utils.closeBrowser()

