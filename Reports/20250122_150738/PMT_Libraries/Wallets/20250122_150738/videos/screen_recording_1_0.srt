1
00:00:00,390 --> 00:00:00,401
1. try

2
00:00:00,407 --> 00:00:07,473
1. utils.openBrowserAndNavigateToPMT()

3
00:00:07,492 --> 00:00:07,496
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:07,497 --> 00:00:07,501
9. TAB = "Wallet_Update"

5
00:00:07,501 --> 00:00:07,513
13. driver = getWebDriver()

6
00:00:07,514 --> 00:00:08,944
17. utils.goToWallets()

7
00:00:08,944 --> 00:00:09,421
21. clickAuthorizePayment = xpath("//a[normalize-space()='Update']")).click()

8
00:00:09,421 --> 00:00:09,995
25. utils.selectEnvironment(ENV)

9
00:00:10,007 --> 00:00:10,235
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:10,236 --> 00:00:13,118
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:13,138 --> 00:00:13,227
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:13,241 --> 00:00:13,306
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:13,323 --> 00:00:13,345
45. accountId = accountId

14
00:00:13,346 --> 00:00:13,349
49. accessToken = accessToken

15
00:00:13,349 --> 00:00:14,012
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:14,049 --> 00:00:14,072
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:14,108 --> 00:00:14,156
1. sendRequestTextBox.clear()

18
00:00:14,170 --> 00:00:14,194
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:14,227 --> 00:00:14,266
9. cardNumber = testdata["cardNumber"][i]

20
00:00:14,288 --> 00:00:14,315
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:14,347 --> 00:00:14,371
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:14,371 --> 00:00:14,413
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:14,431 --> 00:00:14,456
25. expirationYear = testdata["expirationYear"][i]

24
00:00:14,491 --> 00:00:14,532
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:14,568 --> 00:00:14,630
33. cardholderName = testdata["cardholderName"][i]

26
00:00:14,650 --> 00:00:14,672
37. nickName = testdata["nickName"][i]

27
00:00:14,691 --> 00:00:14,713
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:14,732 --> 00:00:14,792
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:14,811 --> 00:00:14,851
49. restRequest = JsonSlurper().parseText(request)

30
00:00:14,873 --> 00:00:14,911
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:14,917 --> 00:00:14,942
57. println(prettyJson)

32
00:00:14,942 --> 00:00:16,449
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:16,450 --> 00:00:16,791
65. utils.clickSendButton()

34
00:00:16,791 --> 00:00:19,821
69. delay(3)

35
00:00:19,822 --> 00:00:20,057
73. response = utils.getResponse()

36
00:00:20,057 --> 00:00:20,059
77. println(response)

37
00:00:20,060 --> 00:00:20,062
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:20,062 --> 00:00:20,064
85. println(validation1)

39
00:00:20,064 --> 00:00:20,066
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:20,066 --> 00:00:20,069
93. println(validation2)

41
00:00:20,069 --> 00:00:20,071
97. println(testdata["TCNumber"][i])

42
00:00:20,071 --> 00:00:20,081
101. assert response.contains(validation1)

43
00:00:20,082 --> 00:00:21,117
2. takeScreenshot("./screenshots/Failed_Wallet_Update.png")

44
00:00:21,117 --> 00:00:21,140
6. println(Assertion failed: $e.message)

45
00:00:21,140 --> 00:00:21,145
10. e.printStackTrace()

46
00:00:21,146 --> 00:00:23,293
1. utils.closeBrowser()

