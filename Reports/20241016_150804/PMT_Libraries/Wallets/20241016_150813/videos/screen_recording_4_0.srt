1
00:00:00,456 --> 00:00:00,458
1. try

2
00:00:00,459 --> 00:00:06,926
1. utils.openBrowserAndNavigateToPMT()

3
00:00:06,947 --> 00:00:06,950
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:06,969 --> 00:00:06,991
9. TAB = "Wallet_Delete"

5
00:00:06,991 --> 00:00:06,994
13. driver = getWebDriver()

6
00:00:06,995 --> 00:00:10,128
17. utils.goToWallets()

7
00:00:10,129 --> 00:00:10,842
21. clickAuthorizePayment = xpath("//a[normalize-space()='Delete']")).click()

8
00:00:10,843 --> 00:00:12,006
25. utils.selectEnvironment(ENV)

9
00:00:12,008 --> 00:00:12,269
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:12,290 --> 00:00:12,727
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:12,727 --> 00:00:12,768
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:12,769 --> 00:00:12,810
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:12,811 --> 00:00:12,813
45. accountId = accountId

14
00:00:12,814 --> 00:00:12,816
49. accessToken = accessToken

15
00:00:12,817 --> 00:00:12,937
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:12,938 --> 00:00:12,941
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:12,941 --> 00:00:12,987
1. sendRequestTextBox.clear()

18
00:00:12,988 --> 00:00:12,992
5. cardNumber = testdata["cardNumber"][i]

19
00:00:12,992 --> 00:00:12,995
9. CNumber = cardNumber.replaceAll("\.0$", "")

20
00:00:12,996 --> 00:00:12,999
13. expirationMonth = testdata["expirationMonth"][i]

21
00:00:12,999 --> 00:00:13,002
17. xMonth = expirationMonth.replaceAll("\.0$", "")

22
00:00:13,002 --> 00:00:13,005
21. expirationYear = testdata["expirationYear"][i]

23
00:00:13,006 --> 00:00:13,009
25. xYear = expirationYear.replaceAll("\.0$", "")

24
00:00:13,010 --> 00:00:13,013
29. request = {
		"cardNumber": "$cardNumber",
		"expirationMonth": "$expirationMonth",
		"expirationYear": "$expirationYear",
		"accessToken": "$accountId",
		"accountId": "$accessToken"
		}

25
00:00:13,013 --> 00:00:13,017
33. restRequest = JsonSlurper().parseText(request)

26
00:00:13,017 --> 00:00:13,021
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

27
00:00:13,022 --> 00:00:13,025
41. println(prettyJson)

28
00:00:13,025 --> 00:00:15,867
45. sendRequestTextBox.sendKeys(prettyJson)

29
00:00:15,868 --> 00:00:16,210
49. utils.clickSendButton()

30
00:00:16,211 --> 00:00:19,219
53. delay(3)

31
00:00:19,220 --> 00:00:21,725
57. response = utils.getResponse()

32
00:00:21,726 --> 00:00:21,729
61. println(response)

33
00:00:21,729 --> 00:00:21,732
65. validation1 = testdata["ContainsValidation"][i]

34
00:00:21,733 --> 00:00:21,735
69. println(validation1)

35
00:00:21,736 --> 00:00:21,739
73. validation2 = testdata["NotContainsValidation"][i]

36
00:00:21,739 --> 00:00:21,742
77. println(validation2)

37
00:00:21,743 --> 00:00:21,746
81. println(testdata["TCNumber"][i])

38
00:00:21,747 --> 00:00:21,752
85. assert response.contains(validation1)

39
00:00:21,752 --> 00:00:23,668
2. takeScreenshot("./screenshots/Failed_Wallet_Delete.png")

40
00:00:23,669 --> 00:00:23,673
6. println(Assertion failed: $e.message)

41
00:00:23,673 --> 00:00:23,681
10. e.printStackTrace()

42
00:00:23,681 --> 00:00:25,964
1. utils.closeBrowser()

