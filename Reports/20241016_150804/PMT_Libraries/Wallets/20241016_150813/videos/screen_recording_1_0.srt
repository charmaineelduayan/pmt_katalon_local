1
00:00:01,631 --> 00:00:01,650
1. try

2
00:00:01,661 --> 00:00:21,554
1. utils.openBrowserAndNavigateToPMT()

3
00:00:21,659 --> 00:00:21,720
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:21,753 --> 00:00:21,813
9. TAB = "Wallet_Update"

5
00:00:21,814 --> 00:00:21,869
13. driver = getWebDriver()

6
00:00:21,889 --> 00:00:26,075
17. utils.goToWallets()

7
00:00:26,076 --> 00:00:26,784
21. clickAuthorizePayment = xpath("//a[normalize-space()='Update']")).click()

8
00:00:26,786 --> 00:00:27,967
25. utils.selectEnvironment(ENV)

9
00:00:27,967 --> 00:00:28,209
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:28,210 --> 00:00:32,970
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:32,971 --> 00:00:33,078
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:33,079 --> 00:00:33,119
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:33,119 --> 00:00:33,152
45. accountId = accountId

14
00:00:33,154 --> 00:00:33,169
49. accessToken = accessToken

15
00:00:33,170 --> 00:00:34,867
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:34,868 --> 00:00:34,872
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:34,873 --> 00:00:34,917
1. sendRequestTextBox.clear()

18
00:00:34,918 --> 00:00:34,923
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:34,924 --> 00:00:34,929
9. cardNumber = testdata["cardNumber"][i]

20
00:00:34,930 --> 00:00:34,956
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:34,957 --> 00:00:34,962
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:34,963 --> 00:00:34,968
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:34,969 --> 00:00:34,977
25. expirationYear = testdata["expirationYear"][i]

24
00:00:34,977 --> 00:00:34,981
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:34,982 --> 00:00:34,993
33. cardholderName = testdata["cardholderName"][i]

26
00:00:34,993 --> 00:00:34,998
37. nickName = testdata["nickName"][i]

27
00:00:34,999 --> 00:00:35,005
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:35,006 --> 00:00:35,086
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:35,086 --> 00:00:35,101
49. restRequest = JsonSlurper().parseText(request)

30
00:00:35,103 --> 00:00:35,207
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:35,210 --> 00:00:35,256
57. println(prettyJson)

32
00:00:35,272 --> 00:00:41,412
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:41,413 --> 00:00:41,836
65. utils.clickSendButton()

34
00:00:41,837 --> 00:00:44,875
69. delay(3)

35
00:00:44,876 --> 00:00:45,167
73. response = utils.getResponse()

36
00:00:45,184 --> 00:00:45,224
77. println(response)

37
00:00:45,244 --> 00:00:45,289
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:45,309 --> 00:00:45,356
85. println(validation1)

39
00:00:45,375 --> 00:00:45,420
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:45,439 --> 00:00:45,483
93. println(validation2)

41
00:00:45,503 --> 00:00:45,549
97. println(testdata["TCNumber"][i])

42
00:00:45,619 --> 00:00:45,762
101. assert response.contains(validation1)

43
00:00:45,820 --> 00:00:47,988
2. takeScreenshot("./screenshots/Failed_Wallet_Update.png")

44
00:00:47,990 --> 00:00:48,113
6. println(Assertion failed: $e.message)

45
00:00:48,114 --> 00:00:48,129
10. e.printStackTrace()

46
00:00:48,130 --> 00:00:51,518
1. utils.closeBrowser()

