1
00:00:00,893 --> 00:00:00,895
1. try

2
00:00:00,896 --> 00:00:07,609
1. utils.openBrowserAndNavigateToPMT()

3
00:00:07,631 --> 00:00:07,655
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:07,675 --> 00:00:07,678
9. TAB = "Wallet_Add"

5
00:00:07,678 --> 00:00:07,681
13. driver = getWebDriver()

6
00:00:07,682 --> 00:00:10,934
17. utils.goToWallets()

7
00:00:10,977 --> 00:00:12,356
21. clickAdd = xpath("//a[normalize-space()='Add']")).click()

8
00:00:12,357 --> 00:00:14,161
25. utils.selectEnvironment(ENV)

9
00:00:14,207 --> 00:00:14,505
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:14,578 --> 00:00:15,327
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:15,327 --> 00:00:15,365
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:15,366 --> 00:00:15,405
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:15,406 --> 00:00:15,408
45. accountId = accountId

14
00:00:15,408 --> 00:00:15,411
49. accessToken = accessToken

15
00:00:15,411 --> 00:00:15,657
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:15,677 --> 00:00:15,720
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:15,808 --> 00:00:15,883
1. sendRequestTextBox.clear()

18
00:00:15,911 --> 00:00:15,956
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:15,976 --> 00:00:16,020
9. cardNumber = testdata["cardNumber"][i]

20
00:00:16,078 --> 00:00:16,136
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:16,176 --> 00:00:16,239
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:16,275 --> 00:00:16,338
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:16,398 --> 00:00:16,422
25. expirationYear = testdata["expirationYear"][i]

24
00:00:16,442 --> 00:00:16,465
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:16,466 --> 00:00:16,492
33. cardholderName = testdata["cardholderName"][i]

26
00:00:16,527 --> 00:00:16,568
37. nickName = testdata["nickName"][i]

27
00:00:16,587 --> 00:00:16,627
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:16,648 --> 00:00:16,669
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:16,689 --> 00:00:16,691
49. restRequest = JsonSlurper().parseText(request)

30
00:00:16,712 --> 00:00:16,738
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:16,758 --> 00:00:16,824
57. println(prettyJson)

32
00:00:16,859 --> 00:00:21,020
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:21,021 --> 00:00:21,341
65. utils.clickSendButton()

34
00:00:21,350 --> 00:00:24,423
69. delay(3)

35
00:00:24,470 --> 00:00:31,045
73. response = utils.getResponse()

36
00:00:31,046 --> 00:00:31,048
77. println(response)

37
00:00:31,049 --> 00:00:31,052
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:31,053 --> 00:00:31,055
85. println(validation1)

39
00:00:31,056 --> 00:00:31,059
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:31,059 --> 00:00:31,062
93. println(validation2)

41
00:00:31,063 --> 00:00:31,065
97. println(testdata["TCNumber"][i])

42
00:00:31,066 --> 00:00:31,069
101. assert response.contains(validation1)

43
00:00:31,069 --> 00:00:31,074
105. assert response.contains(validation2) == false

44
00:00:31,074 --> 00:00:32,727
2. takeScreenshot("./screenshots/Failed_Wallet_Add.png")

45
00:00:32,751 --> 00:00:32,773
6. println(Assertion failed: $e.message)

46
00:00:32,791 --> 00:00:32,834
10. e.printStackTrace()

47
00:00:32,835 --> 00:00:35,093
1. utils.closeBrowser()

