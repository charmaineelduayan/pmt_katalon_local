1
00:00:00,180 --> 00:00:00,182
1. try

2
00:00:00,182 --> 00:00:05,906
1. utils.openBrowserAndNavigateToPMT()

3
00:00:05,926 --> 00:00:05,947
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:05,948 --> 00:00:05,950
9. TAB = "Wallet_Replace"

5
00:00:05,951 --> 00:00:05,953
13. driver = getWebDriver()

6
00:00:05,954 --> 00:00:10,950
17. utils.goToWallets()

7
00:00:10,951 --> 00:00:12,044
21. clickAuthorizePayment = xpath("//a[normalize-space()='Replace']")).click()

8
00:00:12,045 --> 00:00:13,071
25. utils.selectEnvironment(ENV)

9
00:00:13,090 --> 00:00:13,335
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:13,335 --> 00:00:13,859
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:13,860 --> 00:00:13,883
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:13,883 --> 00:00:13,914
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:13,915 --> 00:00:13,917
45. accountId = accountId

14
00:00:13,918 --> 00:00:13,920
49. accessToken = accessToken

15
00:00:13,921 --> 00:00:14,017
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:14,018 --> 00:00:14,020
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:14,020 --> 00:00:14,048
1. sendRequestTextBox.clear()

18
00:00:14,048 --> 00:00:14,051
5. idToBeReplaced = testdata["idToBeReplaced"][i]

19
00:00:14,051 --> 00:00:14,054
9. paymentMethod = testdata["paymentMethod"][i]

20
00:00:14,054 --> 00:00:14,057
13. cardNumber = testdata["cardNumber"][i]

21
00:00:14,058 --> 00:00:14,060
17. CNumber = cardNumber.replaceAll("\.0$", "")

22
00:00:14,060 --> 00:00:14,063
21. expirationMonth = testdata["expirationMonth"][i]

23
00:00:14,063 --> 00:00:14,065
25. xMonth = expirationMonth.replaceAll("\.0$", "")

24
00:00:14,066 --> 00:00:14,068
29. expirationYear = testdata["expirationYear"][i]

25
00:00:14,069 --> 00:00:14,071
33. xYear = expirationYear.replaceAll("\.0$", "")

26
00:00:14,071 --> 00:00:14,074
37. cardholderName = testdata["cardholderName"][i]

27
00:00:14,074 --> 00:00:14,077
41. nickName = testdata["nickName"][i]

28
00:00:14,077 --> 00:00:14,080
45. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

29
00:00:14,080 --> 00:00:14,083
49. request = {
    "idToBeReplaced": "$idToBeReplaced",
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

30
00:00:14,084 --> 00:00:14,086
53. restRequest = JsonSlurper().parseText(request)

31
00:00:14,087 --> 00:00:14,090
57. prettyJson = JsonBuilder(restRequest).toPrettyString()

32
00:00:14,090 --> 00:00:14,092
61. println(prettyJson)

33
00:00:14,093 --> 00:00:15,510
65. sendRequestTextBox.sendKeys(prettyJson)

34
00:00:15,511 --> 00:00:15,804
69. utils.clickSendButton()

35
00:00:15,805 --> 00:00:18,816
73. delay(3)

36
00:00:18,816 --> 00:00:20,973
77. response = utils.getResponse()

37
00:00:20,990 --> 00:00:20,992
81. println(response)

38
00:00:20,992 --> 00:00:20,994
85. validation1 = testdata["ContainsValidation"][i]

39
00:00:20,994 --> 00:00:20,995
89. println(validation1)

40
00:00:20,996 --> 00:00:20,997
93. validation2 = testdata["NotContainsValidation"][i]

41
00:00:20,998 --> 00:00:20,999
97. println(validation2)

42
00:00:20,999 --> 00:00:21,001
101. println(testdata["TCNumber"][i])

43
00:00:21,001 --> 00:00:21,002
105. assert response.contains(validation1)

44
00:00:21,003 --> 00:00:21,009
109. assert response.contains(validation2) == false

45
00:00:21,009 --> 00:00:21,031
1. sendRequestTextBox.clear()

46
00:00:21,032 --> 00:00:21,032
5. idToBeReplaced = testdata["idToBeReplaced"][i]

47
00:00:21,033 --> 00:00:21,034
9. paymentMethod = testdata["paymentMethod"][i]

48
00:00:21,034 --> 00:00:21,035
13. cardNumber = testdata["cardNumber"][i]

49
00:00:21,035 --> 00:00:21,036
17. CNumber = cardNumber.replaceAll("\.0$", "")

50
00:00:21,036 --> 00:00:21,037
21. expirationMonth = testdata["expirationMonth"][i]

51
00:00:21,037 --> 00:00:21,041
25. xMonth = expirationMonth.replaceAll("\.0$", "")

52
00:00:21,042 --> 00:00:21,052
2. println(An unexpected error occurred: $e.message)

53
00:00:21,053 --> 00:00:21,056
6. e.printStackTrace()

54
00:00:21,057 --> 00:00:23,206
1. utils.closeBrowser()

