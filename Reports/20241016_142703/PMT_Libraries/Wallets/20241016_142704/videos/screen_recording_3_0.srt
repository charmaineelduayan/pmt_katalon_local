1
00:00:00,191 --> 00:00:00,192
1. try

2
00:00:00,192 --> 00:00:04,697
1. utils.openBrowserAndNavigateToPMT()

3
00:00:04,718 --> 00:00:04,740
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:04,740 --> 00:00:04,743
9. TAB = "Wallet_Add"

5
00:00:04,744 --> 00:00:04,746
13. driver = getWebDriver()

6
00:00:04,747 --> 00:00:07,551
17. utils.goToWallets()

7
00:00:07,552 --> 00:00:08,233
21. clickAdd = xpath("//a[normalize-space()='Add']")).click()

8
00:00:08,233 --> 00:00:09,072
25. utils.selectEnvironment(ENV)

9
00:00:09,073 --> 00:00:09,305
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:09,305 --> 00:00:09,664
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:09,665 --> 00:00:09,683
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:09,683 --> 00:00:09,700
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:09,700 --> 00:00:09,702
45. accountId = accountId

14
00:00:09,702 --> 00:00:09,703
49. accessToken = accessToken

15
00:00:09,703 --> 00:00:09,766
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:09,766 --> 00:00:09,768
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:09,768 --> 00:00:09,798
1. sendRequestTextBox.clear()

18
00:00:09,798 --> 00:00:09,799
5. paymentMethod = testdata["paymentMethod"][i]

19
00:00:09,800 --> 00:00:09,801
9. cardNumber = testdata["cardNumber"][i]

20
00:00:09,802 --> 00:00:09,803
13. CNumber = cardNumber.replaceAll("\.0$", "")

21
00:00:09,803 --> 00:00:09,804
17. expirationMonth = testdata["expirationMonth"][i]

22
00:00:09,805 --> 00:00:09,806
21. xMonth = expirationMonth.replaceAll("\.0$", "")

23
00:00:09,806 --> 00:00:09,808
25. expirationYear = testdata["expirationYear"][i]

24
00:00:09,808 --> 00:00:09,809
29. xYear = expirationYear.replaceAll("\.0$", "")

25
00:00:09,809 --> 00:00:09,810
33. cardholderName = testdata["cardholderName"][i]

26
00:00:09,811 --> 00:00:09,812
37. nickName = testdata["nickName"][i]

27
00:00:09,812 --> 00:00:09,813
41. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

28
00:00:09,814 --> 00:00:09,815
45. request = {
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName",
        "defaultPaymentMethod": "$defaultPaymentMethod"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

29
00:00:09,815 --> 00:00:09,817
49. restRequest = JsonSlurper().parseText(request)

30
00:00:09,817 --> 00:00:09,819
53. prettyJson = JsonBuilder(restRequest).toPrettyString()

31
00:00:09,819 --> 00:00:09,820
57. println(prettyJson)

32
00:00:09,820 --> 00:00:11,401
61. sendRequestTextBox.sendKeys(prettyJson)

33
00:00:11,437 --> 00:00:11,794
65. utils.clickSendButton()

34
00:00:11,827 --> 00:00:14,876
69. delay(3)

35
00:00:14,877 --> 00:00:16,629
73. response = utils.getResponse()

36
00:00:16,630 --> 00:00:16,631
77. println(response)

37
00:00:16,631 --> 00:00:16,632
81. validation1 = testdata["ContainsValidation"][i]

38
00:00:16,633 --> 00:00:16,634
85. println(validation1)

39
00:00:16,634 --> 00:00:16,635
89. validation2 = testdata["NotContainsValidation"][i]

40
00:00:16,635 --> 00:00:16,636
93. println(validation2)

41
00:00:16,636 --> 00:00:16,637
97. println(testdata["TCNumber"][i])

42
00:00:16,637 --> 00:00:16,638
101. assert response.contains(validation1)

43
00:00:16,639 --> 00:00:16,641
105. assert response.contains(validation2) == false

44
00:00:16,641 --> 00:00:17,612
2. takeScreenshot("./screenshots/Failed_Wallet_Add.png")

45
00:00:17,613 --> 00:00:17,614
6. println(Assertion failed: $e.message)

46
00:00:17,615 --> 00:00:17,617
10. e.printStackTrace()

47
00:00:17,617 --> 00:00:19,803
1. utils.closeBrowser()

