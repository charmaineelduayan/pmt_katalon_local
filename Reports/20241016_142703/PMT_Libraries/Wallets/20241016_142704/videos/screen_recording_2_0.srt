1
00:00:00,291 --> 00:00:00,292
1. try

2
00:00:00,293 --> 00:00:05,231
1. utils.openBrowserAndNavigateToPMT()

3
00:00:05,252 --> 00:00:05,293
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:05,293 --> 00:00:05,295
9. TAB = "Wallet_Replace"

5
00:00:05,296 --> 00:00:05,298
13. driver = getWebDriver()

6
00:00:05,298 --> 00:00:08,230
17. utils.goToWallets()

7
00:00:08,231 --> 00:00:08,808
21. clickAuthorizePayment = xpath("//a[normalize-space()='Replace']")).click()

8
00:00:08,829 --> 00:00:09,587
25. utils.selectEnvironment(ENV)

9
00:00:09,588 --> 00:00:09,813
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:09,814 --> 00:00:10,181
33. fetchGuestAccount = sendRequest(findTestObject("GuestAccount"))

11
00:00:10,182 --> 00:00:10,201
37. accountId = getElementPropertyValue(fetchGuestAccount, "payload.accountId")

12
00:00:10,201 --> 00:00:10,220
41. accessToken = getElementPropertyValue(fetchGuestAccount, "payload.accessToken")

13
00:00:10,220 --> 00:00:10,222
45. accountId = accountId

14
00:00:10,222 --> 00:00:10,224
49. accessToken = accessToken

15
00:00:10,224 --> 00:00:10,302
53. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

16
00:00:10,302 --> 00:00:10,304
57. for ([i = 0, i < testdata.size(), (i++)])

17
00:00:10,305 --> 00:00:10,335
1. sendRequestTextBox.clear()

18
00:00:10,335 --> 00:00:10,337
5. idToBeReplaced = testdata["idToBeReplaced"][i]

19
00:00:10,338 --> 00:00:10,340
9. paymentMethod = testdata["paymentMethod"][i]

20
00:00:10,340 --> 00:00:10,342
13. cardNumber = testdata["cardNumber"][i]

21
00:00:10,343 --> 00:00:10,344
17. CNumber = cardNumber.replaceAll("\.0$", "")

22
00:00:10,344 --> 00:00:10,347
21. expirationMonth = testdata["expirationMonth"][i]

23
00:00:10,347 --> 00:00:10,350
25. xMonth = expirationMonth.replaceAll("\.0$", "")

24
00:00:10,350 --> 00:00:10,352
29. expirationYear = testdata["expirationYear"][i]

25
00:00:10,353 --> 00:00:10,354
33. xYear = expirationYear.replaceAll("\.0$", "")

26
00:00:10,355 --> 00:00:10,356
37. cardholderName = testdata["cardholderName"][i]

27
00:00:10,357 --> 00:00:10,359
41. nickName = testdata["nickName"][i]

28
00:00:10,359 --> 00:00:10,361
45. defaultPaymentMethod = testdata["defaultPaymentMethod"][i]

29
00:00:10,362 --> 00:00:10,365
49. request = {
    "idToBeReplaced": "$idToBeReplaced",
    "paymentMethod": {
        "type": "$paymentMethod",
        "cardNumber": "$cardNumber",
        "expirationMonth": "$expirationMonth",
        "expirationYear": "$expirationYear",
        "cardholder": "$cardholderName",
        "nickname": "$nickName"
    },
    "accountId": "$accountId",
    "accessToken": "$accessToken"
}

30
00:00:10,365 --> 00:00:10,368
53. restRequest = JsonSlurper().parseText(request)

31
00:00:10,368 --> 00:00:10,371
57. prettyJson = JsonBuilder(restRequest).toPrettyString()

32
00:00:10,372 --> 00:00:10,375
61. println(prettyJson)

33
00:00:10,375 --> 00:00:12,194
65. sendRequestTextBox.sendKeys(prettyJson)

34
00:00:12,198 --> 00:00:12,557
69. utils.clickSendButton()

35
00:00:12,601 --> 00:00:15,648
73. delay(3)

36
00:00:15,648 --> 00:00:16,495
77. response = utils.getResponse()

37
00:00:16,495 --> 00:00:16,497
81. println(response)

38
00:00:16,497 --> 00:00:16,499
85. validation1 = testdata["ContainsValidation"][i]

39
00:00:16,499 --> 00:00:16,501
89. println(validation1)

40
00:00:16,502 --> 00:00:16,504
93. validation2 = testdata["NotContainsValidation"][i]

41
00:00:16,504 --> 00:00:16,506
97. println(validation2)

42
00:00:16,507 --> 00:00:16,509
101. println(testdata["TCNumber"][i])

43
00:00:16,509 --> 00:00:16,511
105. assert response.contains(validation1)

44
00:00:16,511 --> 00:00:16,523
109. assert response.contains(validation2) == false

45
00:00:16,524 --> 00:00:16,583
1. sendRequestTextBox.clear()

46
00:00:16,584 --> 00:00:16,585
5. idToBeReplaced = testdata["idToBeReplaced"][i]

47
00:00:16,586 --> 00:00:16,587
9. paymentMethod = testdata["paymentMethod"][i]

48
00:00:16,587 --> 00:00:16,588
13. cardNumber = testdata["cardNumber"][i]

49
00:00:16,589 --> 00:00:16,590
17. CNumber = cardNumber.replaceAll("\.0$", "")

50
00:00:16,590 --> 00:00:16,592
21. expirationMonth = testdata["expirationMonth"][i]

51
00:00:16,592 --> 00:00:16,598
25. xMonth = expirationMonth.replaceAll("\.0$", "")

52
00:00:16,599 --> 00:00:16,614
2. println(An unexpected error occurred: $e.message)

53
00:00:16,614 --> 00:00:16,619
6. e.printStackTrace()

54
00:00:16,619 --> 00:00:18,807
1. utils.closeBrowser()

