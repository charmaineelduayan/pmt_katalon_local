1
00:00:00,272 --> 00:00:00,279
1. try

2
00:00:00,284 --> 00:00:08,007
1. utils.openBrowserAndNavigateToPMT()

3
00:00:08,009 --> 00:00:08,030
5. EXCEL_PATH = "./Data Files/TestData.xlsx"

4
00:00:08,031 --> 00:00:08,033
9. TAB = "cardTokenization_Generate"

5
00:00:08,034 --> 00:00:08,044
13. driver = getWebDriver()

6
00:00:08,044 --> 00:00:09,578
17. utils.goToCardTokenization()

7
00:00:09,579 --> 00:00:10,046
21. clickGenerateToken = xpath("//a[normalize-space()='Generate Token']")).click()

8
00:00:10,046 --> 00:00:10,589
25. utils.selectEnvironment(ENV)

9
00:00:10,602 --> 00:00:10,836
29. sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']"))

10
00:00:10,837 --> 00:00:11,277
33. testdata = getdata.fromExcel(EXCEL_PATH, TAB)

11
00:00:11,277 --> 00:00:11,280
37. for ([i = 0, i < testdata.size(), (i++)])

12
00:00:11,280 --> 00:00:11,307
1. sendRequestTextBox.clear()

13
00:00:11,307 --> 00:00:11,310
5. encryptedCard = testdata["encryptedCard"][i]

14
00:00:11,311 --> 00:00:11,316
9. CNumber = encryptedCard.replaceAll("\.0$", "")

15
00:00:11,316 --> 00:00:11,319
13. expirationMonth = testdata["expirationMonth"][i]

16
00:00:11,319 --> 00:00:11,321
17. xMonth = expirationMonth.replaceAll("\.0$", "")

17
00:00:11,321 --> 00:00:11,323
21. expirationYear = testdata["expirationYear"][i]

18
00:00:11,324 --> 00:00:11,325
25. xYear = expirationYear.replaceAll("\.0$", "")

19
00:00:11,326 --> 00:00:11,354
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

20
00:00:11,355 --> 00:00:11,368
33. restRequest = JsonSlurper().parseText(request)

21
00:00:11,368 --> 00:00:11,386
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

22
00:00:11,386 --> 00:00:11,391
41. println(prettyJson)

23
00:00:11,391 --> 00:00:11,587
45. sendRequestTextBox.sendKeys(prettyJson)

24
00:00:11,587 --> 00:00:11,894
49. utils.clickSendButton()

25
00:00:11,894 --> 00:00:14,921
53. delay(3)

26
00:00:14,922 --> 00:00:16,379
57. response = utils.getResponse()

27
00:00:16,379 --> 00:00:16,381
61. println(response)

28
00:00:16,381 --> 00:00:16,383
65. validation1 = testdata["ContainsValidation"][i]

29
00:00:16,384 --> 00:00:16,385
69. println(validation1)

30
00:00:16,386 --> 00:00:16,388
73. validation2 = testdata["NotContainsValidation"][i]

31
00:00:16,388 --> 00:00:16,390
77. println(validation2)

32
00:00:16,390 --> 00:00:16,393
81. println(testdata["TCNumber"][i])

33
00:00:16,393 --> 00:00:16,401
85. assert response.contains(validation1)

34
00:00:16,401 --> 00:00:16,409
89. assert response.contains(validation2) == false

35
00:00:16,409 --> 00:00:16,454
1. sendRequestTextBox.clear()

36
00:00:16,469 --> 00:00:16,490
5. encryptedCard = testdata["encryptedCard"][i]

37
00:00:16,509 --> 00:00:16,530
9. CNumber = encryptedCard.replaceAll("\.0$", "")

38
00:00:16,549 --> 00:00:16,570
13. expirationMonth = testdata["expirationMonth"][i]

39
00:00:16,589 --> 00:00:16,610
17. xMonth = expirationMonth.replaceAll("\.0$", "")

40
00:00:16,629 --> 00:00:16,630
21. expirationYear = testdata["expirationYear"][i]

41
00:00:16,631 --> 00:00:16,632
25. xYear = expirationYear.replaceAll("\.0$", "")

42
00:00:16,633 --> 00:00:16,634
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

43
00:00:16,634 --> 00:00:16,636
33. restRequest = JsonSlurper().parseText(request)

44
00:00:16,636 --> 00:00:16,638
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

45
00:00:16,638 --> 00:00:16,640
41. println(prettyJson)

46
00:00:16,640 --> 00:00:16,788
45. sendRequestTextBox.sendKeys(prettyJson)

47
00:00:16,788 --> 00:00:17,094
49. utils.clickSendButton()

48
00:00:17,094 --> 00:00:20,122
53. delay(3)

49
00:00:20,123 --> 00:00:20,357
57. response = utils.getResponse()

50
00:00:20,358 --> 00:00:20,359
61. println(response)

51
00:00:20,359 --> 00:00:20,360
65. validation1 = testdata["ContainsValidation"][i]

52
00:00:20,360 --> 00:00:20,361
69. println(validation1)

53
00:00:20,361 --> 00:00:20,362
73. validation2 = testdata["NotContainsValidation"][i]

54
00:00:20,362 --> 00:00:20,363
77. println(validation2)

55
00:00:20,363 --> 00:00:20,364
81. println(testdata["TCNumber"][i])

56
00:00:20,364 --> 00:00:20,365
85. assert response.contains(validation1)

57
00:00:20,365 --> 00:00:20,366
89. assert response.contains(validation2) == false

58
00:00:20,366 --> 00:00:20,405
1. sendRequestTextBox.clear()

59
00:00:20,406 --> 00:00:20,407
5. encryptedCard = testdata["encryptedCard"][i]

60
00:00:20,407 --> 00:00:20,408
9. CNumber = encryptedCard.replaceAll("\.0$", "")

61
00:00:20,408 --> 00:00:20,409
13. expirationMonth = testdata["expirationMonth"][i]

62
00:00:20,409 --> 00:00:20,410
17. xMonth = expirationMonth.replaceAll("\.0$", "")

63
00:00:20,410 --> 00:00:20,411
21. expirationYear = testdata["expirationYear"][i]

64
00:00:20,412 --> 00:00:20,413
25. xYear = expirationYear.replaceAll("\.0$", "")

65
00:00:20,413 --> 00:00:20,415
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

66
00:00:20,415 --> 00:00:20,416
33. restRequest = JsonSlurper().parseText(request)

67
00:00:20,417 --> 00:00:20,418
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

68
00:00:20,419 --> 00:00:20,420
41. println(prettyJson)

69
00:00:20,420 --> 00:00:20,552
45. sendRequestTextBox.sendKeys(prettyJson)

70
00:00:20,552 --> 00:00:20,836
49. utils.clickSendButton()

71
00:00:20,836 --> 00:00:23,842
53. delay(3)

72
00:00:23,842 --> 00:00:24,076
57. response = utils.getResponse()

73
00:00:24,076 --> 00:00:24,077
61. println(response)

74
00:00:24,077 --> 00:00:24,078
65. validation1 = testdata["ContainsValidation"][i]

75
00:00:24,078 --> 00:00:24,079
69. println(validation1)

76
00:00:24,079 --> 00:00:24,080
73. validation2 = testdata["NotContainsValidation"][i]

77
00:00:24,080 --> 00:00:24,081
77. println(validation2)

78
00:00:24,081 --> 00:00:24,082
81. println(testdata["TCNumber"][i])

79
00:00:24,082 --> 00:00:24,082
85. assert response.contains(validation1)

80
00:00:24,083 --> 00:00:24,083
89. assert response.contains(validation2) == false

81
00:00:24,083 --> 00:00:24,122
1. sendRequestTextBox.clear()

82
00:00:24,123 --> 00:00:24,123
5. encryptedCard = testdata["encryptedCard"][i]

83
00:00:24,124 --> 00:00:24,124
9. CNumber = encryptedCard.replaceAll("\.0$", "")

84
00:00:24,125 --> 00:00:24,126
13. expirationMonth = testdata["expirationMonth"][i]

85
00:00:24,126 --> 00:00:24,127
17. xMonth = expirationMonth.replaceAll("\.0$", "")

86
00:00:24,128 --> 00:00:24,129
21. expirationYear = testdata["expirationYear"][i]

87
00:00:24,129 --> 00:00:24,130
25. xYear = expirationYear.replaceAll("\.0$", "")

88
00:00:24,131 --> 00:00:24,132
29. request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}

89
00:00:24,132 --> 00:00:24,133
33. restRequest = JsonSlurper().parseText(request)

90
00:00:24,134 --> 00:00:24,135
37. prettyJson = JsonBuilder(restRequest).toPrettyString()

91
00:00:24,136 --> 00:00:24,137
41. println(prettyJson)

92
00:00:24,138 --> 00:00:24,275
45. sendRequestTextBox.sendKeys(prettyJson)

93
00:00:24,275 --> 00:00:24,558
49. utils.clickSendButton()

94
00:00:24,558 --> 00:00:27,563
53. delay(3)

95
00:00:27,564 --> 00:00:27,796
57. response = utils.getResponse()

96
00:00:27,796 --> 00:00:27,797
61. println(response)

97
00:00:27,797 --> 00:00:27,798
65. validation1 = testdata["ContainsValidation"][i]

98
00:00:27,798 --> 00:00:27,798
69. println(validation1)

99
00:00:27,799 --> 00:00:27,799
73. validation2 = testdata["NotContainsValidation"][i]

100
00:00:27,799 --> 00:00:27,800
77. println(validation2)

101
00:00:27,800 --> 00:00:27,801
81. println(testdata["TCNumber"][i])

102
00:00:27,801 --> 00:00:27,801
85. assert response.contains(validation1)

103
00:00:27,802 --> 00:00:27,804
89. assert response.contains(validation2) == false

104
00:00:27,804 --> 00:00:29,948
1. utils.closeBrowser()

