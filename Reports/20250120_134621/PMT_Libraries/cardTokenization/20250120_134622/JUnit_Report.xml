<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="cardTokenization" time="66.346" tests="2" failures="0" errors="0">
   <testsuite name="cardTokenization" tests="2" failures="0" errors="0" time="66.346" skipped="0" timestamp="20-01-2025T13:46:25" hostname="manilacel - localhost" id="Test Suites/PMT_Libraries/cardTokenization">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform"/>
         <property name="logFolder" value="/Users/manilacel/Library/CloudStorage/OneDrive-RoyalCaribbeanGroup/PMT/Git/payment.web-utility-automation/payment.web-utility-automation/Reports/20250120_134621/PMT_Libraries/cardTokenization/20250120_134622"/>
         <property name="logFiles" value="/Users/manilacel/Library/CloudStorage/OneDrive-RoyalCaribbeanGroup/PMT/Git/payment.web-utility-automation/payment.web-utility-automation/Reports/20250120_134621/PMT_Libraries/cardTokenization/20250120_134622/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="manilacel - localhost"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="9.5.0.217"/>
         <property name="browser" value="Chrome 131.0.0.0"/>
         <property name="hostAddress" value="127.0.0.1"/>
         <property name="sessionId" value="edad6412640a7eeb0e8f54fa69918729"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Mac OS X"/>
      </properties>
      <testcase name="Test Cases/Web_Utilities_TestCases/cardTokenization/TC2_CardTokenization_GenerateToken" time="34.25" classname="Test Cases/Web_Utilities_TestCases/cardTokenization/TC2_CardTokenization_GenerateToken" status="PASSED">
         <system-out><![CDATA[20-01-2025T13:46:25 - [TEST_CASE][PASSED] - Test Cases/Web_Utilities_TestCases/cardTokenization/TC2_CardTokenization_GenerateToken: Test Cases/Web_Utilities_TestCases/cardTokenization/TC2_CardTokenization_GenerateToken

20-01-2025T13:46:28 - [TEST_STEP][PASSED] - try: null

20-01-2025T13:46:28 - [TEST_STEP][PASSED] - utils.openBrowserAndNavigateToPMT(): Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

20-01-2025T13:46:28 - [MESSAGE][INFO] - Starting 'Chrome' driver

20-01-2025T13:46:28 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

20-01-2025T13:46:31 - [MESSAGE][PASSED] - Browser is opened with url: ''

20-01-2025T13:46:31 - [MESSAGE][PASSED] - Current window maximized

20-01-2025T13:46:36 - [MESSAGE][PASSED] - Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

20-01-2025T13:46:36 - [TEST_STEP][PASSED] - EXCEL_PATH = "./Data Files/TestData.xlsx": null

20-01-2025T13:46:36 - [TEST_STEP][PASSED] - TAB = "cardTokenization_Generate": null

20-01-2025T13:46:36 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

20-01-2025T13:46:36 - [TEST_STEP][PASSED] - utils.goToCardTokenization(): null

20-01-2025T13:46:37 - [TEST_STEP][PASSED] - clickGenerateToken = xpath("//a[normalize-space()='Generate Token']")).click(): null

20-01-2025T13:46:38 - [TEST_STEP][PASSED] - utils.selectEnvironment(ENV): null

20-01-2025T13:46:38 - [TEST_STEP][PASSED] - sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']")): null

20-01-2025T13:46:38 - [TEST_STEP][PASSED] - testdata = getdata.fromExcel(EXCEL_PATH, TAB): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - for ([i = 0, i < testdata.size(), (i++)]): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - encryptedCard = testdata["encryptedCard"][i]: null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - CNumber = encryptedCard.replaceAll("\.0$", ""): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}: null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - println(prettyJson): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

20-01-2025T13:46:39 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

20-01-2025T13:46:42 - [MESSAGE][PASSED] - Delayed 3 second(s)

20-01-2025T13:46:42 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - println(response): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - println(validation1): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - println(validation2): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - encryptedCard = testdata["encryptedCard"][i]: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - CNumber = encryptedCard.replaceAll("\.0$", ""): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}: null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - println(prettyJson): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

20-01-2025T13:46:44 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

20-01-2025T13:46:45 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

20-01-2025T13:46:48 - [MESSAGE][PASSED] - Delayed 3 second(s)

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - println(response): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - println(validation1): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - println(validation2): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - encryptedCard = testdata["encryptedCard"][i]: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - CNumber = encryptedCard.replaceAll("\.0$", ""): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}: null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - println(prettyJson): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

20-01-2025T13:46:48 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

20-01-2025T13:46:51 - [MESSAGE][PASSED] - Delayed 3 second(s)

20-01-2025T13:46:51 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - println(response): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - println(validation1): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - println(validation2): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - encryptedCard = testdata["encryptedCard"][i]: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - CNumber = encryptedCard.replaceAll("\.0$", ""): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - expirationMonth = testdata["expirationMonth"][i]: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - xMonth = expirationMonth.replaceAll("\.0$", ""): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - expirationYear = testdata["expirationYear"][i]: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - xYear = expirationYear.replaceAll("\.0$", ""): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - request = {
			"cardNumber": "$encryptedCard",
			"expirationMonth": "$expirationMonth",
			"expirationYear": "$expirationYear"
			}: null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - restRequest = JsonSlurper().parseText(request): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - prettyJson = JsonBuilder(restRequest).toPrettyString(): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - println(prettyJson): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(prettyJson): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

20-01-2025T13:46:52 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

20-01-2025T13:46:55 - [MESSAGE][PASSED] - Delayed 3 second(s)

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - println(response): null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - println(validation1): null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - println(validation2): null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - Finally: Browser is closed

20-01-2025T13:46:55 - [TEST_STEP][PASSED] - utils.closeBrowser(): Browser is closed

20-01-2025T13:46:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

20-01-2025T13:46:57 - [MESSAGE][PASSED] - Browser is closed

20-01-2025T13:47:00 - [TEST_STEP][PASSED] - Video: Video recording for test case 'Test Cases/Web_Utilities_TestCases/cardTokenization/TC2_CardTokenization_GenerateToken' .

20-01-2025T13:47:00 - [MESSAGE][INFO] - Video recording for test case 'Test Cases/Web_Utilities_TestCases/cardTokenization/TC2_CardTokenization_GenerateToken' .]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard" time="31.967" classname="Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard" status="PASSED">
         <system-out><![CDATA[20-01-2025T13:47:00 - [TEST_CASE][PASSED] - Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard: Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard

20-01-2025T13:47:00 - [TEST_STEP][PASSED] - try: null

20-01-2025T13:47:00 - [TEST_STEP][PASSED] - utils.openBrowserAndNavigateToPMT(): Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

20-01-2025T13:47:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

20-01-2025T13:47:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

20-01-2025T13:47:01 - [MESSAGE][PASSED] - Browser is opened with url: ''

20-01-2025T13:47:01 - [MESSAGE][PASSED] - Current window maximized

20-01-2025T13:47:06 - [MESSAGE][PASSED] - Navigate to 'https://dev1.payment.rccl.com/payment/utilities' successfully

20-01-2025T13:47:06 - [TEST_STEP][PASSED] - EXCEL_PATH = "./Data Files/TestData.xlsx": null

20-01-2025T13:47:06 - [TEST_STEP][PASSED] - TAB = "cardTokenization_Encrypt": null

20-01-2025T13:47:06 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

20-01-2025T13:47:06 - [TEST_STEP][PASSED] - utils.goToCardTokenization(): null

20-01-2025T13:47:08 - [TEST_STEP][PASSED] - utils.selectEnvironment(ENV): null

20-01-2025T13:47:09 - [TEST_STEP][PASSED] - sendRequestTextBox = driver.findElement(By.xpath("//textarea[@name='req']")): null

20-01-2025T13:47:10 - [TEST_STEP][PASSED] - testdata = getdata.fromExcel(EXCEL_PATH, TAB): null

20-01-2025T13:47:10 - [TEST_STEP][PASSED] - for ([i = 0, i < testdata.size(), (i++)]): null

20-01-2025T13:47:10 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

20-01-2025T13:47:15 - [MESSAGE][PASSED] - Delayed 5 second(s)

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - encryptedCard = testdata["encryptedCard"][i]: null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - CNumber = encryptedCard.replaceAll("\.0$", ""): null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - request = $encryptedCard: null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - println(request): null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(request): null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

20-01-2025T13:47:15 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

20-01-2025T13:47:18 - [MESSAGE][PASSED] - Delayed 3 second(s)

20-01-2025T13:47:18 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - println(response): null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - println(validation1): null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - println(validation2): null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

20-01-2025T13:47:19 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

20-01-2025T13:47:24 - [MESSAGE][PASSED] - Delayed 5 second(s)

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - sendRequestTextBox.clear(): null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - encryptedCard = testdata["encryptedCard"][i]: null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - CNumber = encryptedCard.replaceAll("\.0$", ""): null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - request = $encryptedCard: null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - println(request): null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - sendRequestTextBox.sendKeys(request): null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - utils.clickSendButton(): null

20-01-2025T13:47:24 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

20-01-2025T13:47:27 - [MESSAGE][PASSED] - Delayed 3 second(s)

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - response = utils.getResponse(): null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - println(response): null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - validation1 = testdata["ContainsValidation"][i]: null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - println(validation1): null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - validation2 = testdata["NotContainsValidation"][i]: null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - println(validation2): null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - println(testdata["TCNumber"][i]): null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - assert response.contains(validation1): null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - assert response.contains(validation2) == false: null

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - Finally: Browser is closed

20-01-2025T13:47:27 - [TEST_STEP][PASSED] - utils.closeBrowser(): Browser is closed

20-01-2025T13:47:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

20-01-2025T13:47:29 - [MESSAGE][PASSED] - Browser is closed

20-01-2025T13:47:32 - [TEST_STEP][PASSED] - Video: Video recording for test case 'Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard' .

20-01-2025T13:47:32 - [MESSAGE][INFO] - Video recording for test case 'Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard' .]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[20-01-2025T13:46:25 - [TEST_SUITE][PASSED] - cardTokenization: Test Cases/Web_Utilities_TestCases/cardTokenization/TC1_CardTokenization_EncryptedCard]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
